Terminals unused in grammar

   KwExtends
   KwNew
   KwNull
   KwRot
   "end of input"
   Error


Grammar

    0 $accept: program $end

    1 program: KwClass Id "{" program_body "}"
    2        | KwClass Id "{" "}"

    3 program_body: program_body field_decl
    4             | program_body method_decl
    5             | field_decl
    6             | method_decl

    7 field_decl: type mult-field ";"
    8           | type Id "=" constant ";"

    9 mult-field: mult-field "," Id
   10           | mult-field "," Id "[" intConstant "]"
   11           | Id
   12           | Id "[" intConstant "]"

   13 method_decl: type Id "(" params ")" block
   14            | KwVoid Id "(" params ")" block

   15 params: params_p
   16       | %empty

   17 params_p: params "," type Id
   18         | type Id

   19 type: KwInt
   20     | KwBool

   21 block: "{" block_p "}"
   22      | "{" "}"

   23 block_p: block_p var-decl
   24        | var-decl
   25        | block_p statement
   26        | statement

   27 var-decl: type var-decl_p ";"

   28 var-decl_p: var-decl_p "," Id
   29           | Id

   30 statement: assign ";"
   31          | method-call_stmt ";"
   32          | KwIf "(" expr ")" block else_opt
   33          | KwWhile "(" expr ")" block
   34          | KwBreak ";"
   35          | KwFor "(" for_assign ";" expr ";" for_assign ")" block
   36          | KwReturn return_expr ";"
   37          | KwContinue ";"
   38          | block

   39 assign: lvalue "=" expr

   40 else_opt: KwElse block
   41         | %empty

   42 for_assign: for_assign "," assign
   43           | assign

   44 return_expr: expr

   45 method-call_stmt: Id "(" method-call_params ")"
   46                 | KwPrint "(" argument ")"
   47                 | KwPrintln "(" argument ")"
   48                 | KwRead "(" ")"
   49                 | KwRandom "(" expr ")"

   50 method-call_expr: Id "(" method-call_params ")"
   51                 | KwPrint "(" argument ")"
   52                 | KwPrintln "(" argument ")"
   53                 | KwRead "(" ")"
   54                 | KwRandom "(" expr ")"

   55 method-call_params: method-call_params "," expr
   56                   | expr

   57 argument: StringConstant
   58         | expr

   59 lvalue: Id
   60       | Id "[" expr "]"

   61 expr: lvalue
   62     | method-call_expr
   63     | constant
   64     | bin-op
   65     | "!" expr
   66     | "-" expr
   67     | "(" expr ")"

   68 bin-op: arith-op
   69       | rel-op
   70       | cond-op
   71       | eq-op

   72 arith-op: expr "+" expr
   73         | expr "-" expr
   74         | expr "*" expr
   75         | expr "/" expr
   76         | expr "<<" expr
   77         | expr ">>" expr
   78         | expr "%" expr

   79 rel-op: expr "<" expr
   80       | expr ">" expr
   81       | expr "<=" expr
   82       | expr ">=" expr

   83 eq-op: expr "==" expr
   84      | expr "!=" expr

   85 cond-op: expr "&&" expr
   86        | expr "||" expr

   87 constant: intConstant
   88         | CharConstant
   89         | KwTrue
   90         | KwFalse


Terminals, with rules where they appear

$end (0) 0
error (256)
KwBool (258) 20
KwBreak (259) 34
KwContinue (260) 37
KwClass (261) 1 2
KwElse (262) 40
KwExtends (263)
KwFalse (264) 90
KwFor (265) 35
KwIf (266) 32
KwInt (267) 19
KwNew (268)
KwNull (269)
KwReturn (270) 36
KwRot (271)
KwTrue (272) 89
KwVoid (273) 14
KwWhile (274) 33
KwPrint (275) 46 51
KwPrintln (276) 47 52
KwRead (277) 48 53
KwRandom (278) 49 54
"{" (279) 1 2 21 22
"}" (280) 1 2 21 22
"[" (281) 10 12 60
"]" (282) 10 12 60
"," (283) 9 10 17 28 42 55
";" (284) 7 8 27 30 31 34 35 36 37
"(" (285) 13 14 32 33 35 45 46 47 48 49 50 51 52 53 54 67
")" (286) 13 14 32 33 35 45 46 47 48 49 50 51 52 53 54 67
"!" (287) 65
"+" (288) 72
"-" (289) 66 73
"/" (290) 75
"*" (291) 74
"%" (292) 78
"=" (293) 8 39
">" (294) 80
"<" (295) 79
">=" (296) 82
"<=" (297) 81
"!=" (298) 84
"&&" (299) 85
"||" (300) 86
"==" (301) 83
"<<" (302) 76
">>" (303) 77
intConstant (304) 10 12 87
CharConstant (305) 88
Id (306) 1 2 8 9 10 11 12 13 14 17 18 28 29 45 50 59 60
StringConstant (307) 57
"end of input" (308)
Error (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0
program_body (57)
    on left: 3 4 5 6, on right: 1 3 4
field_decl (58)
    on left: 7 8, on right: 3 5
mult-field (59)
    on left: 9 10 11 12, on right: 7 9 10
method_decl (60)
    on left: 13 14, on right: 4 6
params (61)
    on left: 15 16, on right: 13 14 17
params_p (62)
    on left: 17 18, on right: 15
type (63)
    on left: 19 20, on right: 7 8 13 17 18 27
block (64)
    on left: 21 22, on right: 13 14 32 33 35 38 40
block_p (65)
    on left: 23 24 25 26, on right: 21 23 25
var-decl (66)
    on left: 27, on right: 23 24
var-decl_p (67)
    on left: 28 29, on right: 27 28
statement (68)
    on left: 30 31 32 33 34 35 36 37 38, on right: 25 26
assign (69)
    on left: 39, on right: 30 42 43
else_opt (70)
    on left: 40 41, on right: 32
for_assign (71)
    on left: 42 43, on right: 35 42
return_expr (72)
    on left: 44, on right: 36
method-call_stmt (73)
    on left: 45 46 47 48 49, on right: 31
method-call_expr (74)
    on left: 50 51 52 53 54, on right: 62
method-call_params (75)
    on left: 55 56, on right: 45 50 55
argument (76)
    on left: 57 58, on right: 46 47 51 52
lvalue (77)
    on left: 59 60, on right: 39 61
expr (78)
    on left: 61 62 63 64 65 66 67, on right: 32 33 35 39 44 49 54 55
    56 58 60 65 66 67 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
bin-op (79)
    on left: 68 69 70 71, on right: 64
arith-op (80)
    on left: 72 73 74 75 76 77 78, on right: 68
rel-op (81)
    on left: 79 80 81 82, on right: 69
eq-op (82)
    on left: 83 84, on right: 71
cond-op (83)
    on left: 85 86, on right: 70
constant (84)
    on left: 87 88 89 90, on right: 8 63


State 0

    0 $accept: . program $end
    1 program: . KwClass Id "{" program_body "}"
    2        | . KwClass Id "{" "}"

    KwClass  shift, and go to state 1

    program  go to state 2


State 1

    1 program: KwClass . Id "{" program_body "}"
    2        | KwClass . Id "{" "}"

    Id  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: KwClass Id . "{" program_body "}"
    2        | KwClass Id . "{" "}"

    "{"  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: KwClass Id "{" . program_body "}"
    2        | KwClass Id "{" . "}"
    3 program_body: . program_body field_decl
    4             | . program_body method_decl
    5             | . field_decl
    6             | . method_decl
    7 field_decl: . type mult-field ";"
    8           | . type Id "=" constant ";"
   13 method_decl: . type Id "(" params ")" block
   14            | . KwVoid Id "(" params ")" block
   19 type: . KwInt
   20     | . KwBool

    KwBool  shift, and go to state 6
    KwInt   shift, and go to state 7
    KwVoid  shift, and go to state 8
    "}"     shift, and go to state 9

    program_body  go to state 10
    field_decl    go to state 11
    method_decl   go to state 12
    type          go to state 13


State 6

   20 type: KwBool .

    $default  reduce using rule 20 (type)


State 7

   19 type: KwInt .

    $default  reduce using rule 19 (type)


State 8

   14 method_decl: KwVoid . Id "(" params ")" block

    Id  shift, and go to state 14


State 9

    2 program: KwClass Id "{" "}" .

    $default  reduce using rule 2 (program)


State 10

    1 program: KwClass Id "{" program_body . "}"
    3 program_body: program_body . field_decl
    4             | program_body . method_decl
    7 field_decl: . type mult-field ";"
    8           | . type Id "=" constant ";"
   13 method_decl: . type Id "(" params ")" block
   14            | . KwVoid Id "(" params ")" block
   19 type: . KwInt
   20     | . KwBool

    KwBool  shift, and go to state 6
    KwInt   shift, and go to state 7
    KwVoid  shift, and go to state 8
    "}"     shift, and go to state 15

    field_decl   go to state 16
    method_decl  go to state 17
    type         go to state 13


State 11

    5 program_body: field_decl .

    $default  reduce using rule 5 (program_body)


State 12

    6 program_body: method_decl .

    $default  reduce using rule 6 (program_body)


State 13

    7 field_decl: type . mult-field ";"
    8           | type . Id "=" constant ";"
    9 mult-field: . mult-field "," Id
   10           | . mult-field "," Id "[" intConstant "]"
   11           | . Id
   12           | . Id "[" intConstant "]"
   13 method_decl: type . Id "(" params ")" block

    Id  shift, and go to state 18

    mult-field  go to state 19


State 14

   14 method_decl: KwVoid Id . "(" params ")" block

    "("  shift, and go to state 20


State 15

    1 program: KwClass Id "{" program_body "}" .

    $default  reduce using rule 1 (program)


State 16

    3 program_body: program_body field_decl .

    $default  reduce using rule 3 (program_body)


State 17

    4 program_body: program_body method_decl .

    $default  reduce using rule 4 (program_body)


State 18

    8 field_decl: type Id . "=" constant ";"
   11 mult-field: Id .  [",", ";"]
   12           | Id . "[" intConstant "]"
   13 method_decl: type Id . "(" params ")" block

    "["  shift, and go to state 21
    "("  shift, and go to state 22
    "="  shift, and go to state 23

    $default  reduce using rule 11 (mult-field)


State 19

    7 field_decl: type mult-field . ";"
    9 mult-field: mult-field . "," Id
   10           | mult-field . "," Id "[" intConstant "]"

    ","  shift, and go to state 24
    ";"  shift, and go to state 25


State 20

   14 method_decl: KwVoid Id "(" . params ")" block
   15 params: . params_p
   16       | . %empty  [",", ")"]
   17 params_p: . params "," type Id
   18         | . type Id
   19 type: . KwInt
   20     | . KwBool

    KwBool  shift, and go to state 6
    KwInt   shift, and go to state 7

    $default  reduce using rule 16 (params)

    params    go to state 26
    params_p  go to state 27
    type      go to state 28


State 21

   12 mult-field: Id "[" . intConstant "]"

    intConstant  shift, and go to state 29


State 22

   13 method_decl: type Id "(" . params ")" block
   15 params: . params_p
   16       | . %empty  [",", ")"]
   17 params_p: . params "," type Id
   18         | . type Id
   19 type: . KwInt
   20     | . KwBool

    KwBool  shift, and go to state 6
    KwInt   shift, and go to state 7

    $default  reduce using rule 16 (params)

    params    go to state 30
    params_p  go to state 27
    type      go to state 28


State 23

    8 field_decl: type Id "=" . constant ";"
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34

    constant  go to state 35


State 24

    9 mult-field: mult-field "," . Id
   10           | mult-field "," . Id "[" intConstant "]"

    Id  shift, and go to state 36


State 25

    7 field_decl: type mult-field ";" .

    $default  reduce using rule 7 (field_decl)


State 26

   14 method_decl: KwVoid Id "(" params . ")" block
   17 params_p: params . "," type Id

    ","  shift, and go to state 37
    ")"  shift, and go to state 38


State 27

   15 params: params_p .

    $default  reduce using rule 15 (params)


State 28

   18 params_p: type . Id

    Id  shift, and go to state 39


State 29

   12 mult-field: Id "[" intConstant . "]"

    "]"  shift, and go to state 40


State 30

   13 method_decl: type Id "(" params . ")" block
   17 params_p: params . "," type Id

    ","  shift, and go to state 37
    ")"  shift, and go to state 41


State 31

   90 constant: KwFalse .

    $default  reduce using rule 90 (constant)


State 32

   89 constant: KwTrue .

    $default  reduce using rule 89 (constant)


State 33

   87 constant: intConstant .

    $default  reduce using rule 87 (constant)


State 34

   88 constant: CharConstant .

    $default  reduce using rule 88 (constant)


State 35

    8 field_decl: type Id "=" constant . ";"

    ";"  shift, and go to state 42


State 36

    9 mult-field: mult-field "," Id .  [",", ";"]
   10           | mult-field "," Id . "[" intConstant "]"

    "["  shift, and go to state 43

    $default  reduce using rule 9 (mult-field)


State 37

   17 params_p: params "," . type Id
   19 type: . KwInt
   20     | . KwBool

    KwBool  shift, and go to state 6
    KwInt   shift, and go to state 7

    type  go to state 44


State 38

   14 method_decl: KwVoid Id "(" params ")" . block
   21 block: . "{" block_p "}"
   22      | . "{" "}"

    "{"  shift, and go to state 45

    block  go to state 46


State 39

   18 params_p: type Id .

    $default  reduce using rule 18 (params_p)


State 40

   12 mult-field: Id "[" intConstant "]" .

    $default  reduce using rule 12 (mult-field)


State 41

   13 method_decl: type Id "(" params ")" . block
   21 block: . "{" block_p "}"
   22      | . "{" "}"

    "{"  shift, and go to state 45

    block  go to state 47


State 42

    8 field_decl: type Id "=" constant ";" .

    $default  reduce using rule 8 (field_decl)


State 43

   10 mult-field: mult-field "," Id "[" . intConstant "]"

    intConstant  shift, and go to state 48


State 44

   17 params_p: params "," type . Id

    Id  shift, and go to state 49


State 45

   19 type: . KwInt
   20     | . KwBool
   21 block: . "{" block_p "}"
   21      | "{" . block_p "}"
   22      | . "{" "}"
   22      | "{" . "}"
   23 block_p: . block_p var-decl
   24        | . var-decl
   25        | . block_p statement
   26        | . statement
   27 var-decl: . type var-decl_p ";"
   30 statement: . assign ";"
   31          | . method-call_stmt ";"
   32          | . KwIf "(" expr ")" block else_opt
   33          | . KwWhile "(" expr ")" block
   34          | . KwBreak ";"
   35          | . KwFor "(" for_assign ";" expr ";" for_assign ")" block
   36          | . KwReturn return_expr ";"
   37          | . KwContinue ";"
   38          | . block
   39 assign: . lvalue "=" expr
   45 method-call_stmt: . Id "(" method-call_params ")"
   46                 | . KwPrint "(" argument ")"
   47                 | . KwPrintln "(" argument ")"
   48                 | . KwRead "(" ")"
   49                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"

    KwBool      shift, and go to state 6
    KwBreak     shift, and go to state 50
    KwContinue  shift, and go to state 51
    KwFor       shift, and go to state 52
    KwIf        shift, and go to state 53
    KwInt       shift, and go to state 7
    KwReturn    shift, and go to state 54
    KwWhile     shift, and go to state 55
    KwPrint     shift, and go to state 56
    KwPrintln   shift, and go to state 57
    KwRead      shift, and go to state 58
    KwRandom    shift, and go to state 59
    "{"         shift, and go to state 45
    "}"         shift, and go to state 60
    Id          shift, and go to state 61

    type              go to state 62
    block             go to state 63
    block_p           go to state 64
    var-decl          go to state 65
    statement         go to state 66
    assign            go to state 67
    method-call_stmt  go to state 68
    lvalue            go to state 69


State 46

   14 method_decl: KwVoid Id "(" params ")" block .

    $default  reduce using rule 14 (method_decl)


State 47

   13 method_decl: type Id "(" params ")" block .

    $default  reduce using rule 13 (method_decl)


State 48

   10 mult-field: mult-field "," Id "[" intConstant . "]"

    "]"  shift, and go to state 70


State 49

   17 params_p: params "," type Id .

    $default  reduce using rule 17 (params_p)


State 50

   34 statement: KwBreak . ";"

    ";"  shift, and go to state 71


State 51

   37 statement: KwContinue . ";"

    ";"  shift, and go to state 72


State 52

   35 statement: KwFor . "(" for_assign ";" expr ";" for_assign ")" block

    "("  shift, and go to state 73


State 53

   32 statement: KwIf . "(" expr ")" block else_opt

    "("  shift, and go to state 74


State 54

   36 statement: KwReturn . return_expr ";"
   44 return_expr: . expr
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    return_expr       go to state 83
    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 86
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 55

   33 statement: KwWhile . "(" expr ")" block

    "("  shift, and go to state 93


State 56

   46 method-call_stmt: KwPrint . "(" argument ")"

    "("  shift, and go to state 94


State 57

   47 method-call_stmt: KwPrintln . "(" argument ")"

    "("  shift, and go to state 95


State 58

   48 method-call_stmt: KwRead . "(" ")"

    "("  shift, and go to state 96


State 59

   49 method-call_stmt: KwRandom . "(" expr ")"

    "("  shift, and go to state 97


State 60

   22 block: "{" "}" .

    $default  reduce using rule 22 (block)


State 61

   45 method-call_stmt: Id . "(" method-call_params ")"
   59 lvalue: Id .  ["="]
   60       | Id . "[" expr "]"

    "["  shift, and go to state 98
    "("  shift, and go to state 99

    $default  reduce using rule 59 (lvalue)


State 62

   27 var-decl: type . var-decl_p ";"
   28 var-decl_p: . var-decl_p "," Id
   29           | . Id

    Id  shift, and go to state 100

    var-decl_p  go to state 101


State 63

   38 statement: block .

    $default  reduce using rule 38 (statement)


State 64

   19 type: . KwInt
   20     | . KwBool
   21 block: . "{" block_p "}"
   21      | "{" block_p . "}"
   22      | . "{" "}"
   23 block_p: block_p . var-decl
   25        | block_p . statement
   27 var-decl: . type var-decl_p ";"
   30 statement: . assign ";"
   31          | . method-call_stmt ";"
   32          | . KwIf "(" expr ")" block else_opt
   33          | . KwWhile "(" expr ")" block
   34          | . KwBreak ";"
   35          | . KwFor "(" for_assign ";" expr ";" for_assign ")" block
   36          | . KwReturn return_expr ";"
   37          | . KwContinue ";"
   38          | . block
   39 assign: . lvalue "=" expr
   45 method-call_stmt: . Id "(" method-call_params ")"
   46                 | . KwPrint "(" argument ")"
   47                 | . KwPrintln "(" argument ")"
   48                 | . KwRead "(" ")"
   49                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"

    KwBool      shift, and go to state 6
    KwBreak     shift, and go to state 50
    KwContinue  shift, and go to state 51
    KwFor       shift, and go to state 52
    KwIf        shift, and go to state 53
    KwInt       shift, and go to state 7
    KwReturn    shift, and go to state 54
    KwWhile     shift, and go to state 55
    KwPrint     shift, and go to state 56
    KwPrintln   shift, and go to state 57
    KwRead      shift, and go to state 58
    KwRandom    shift, and go to state 59
    "{"         shift, and go to state 45
    "}"         shift, and go to state 102
    Id          shift, and go to state 61

    type              go to state 62
    block             go to state 63
    var-decl          go to state 103
    statement         go to state 104
    assign            go to state 67
    method-call_stmt  go to state 68
    lvalue            go to state 69


State 65

   24 block_p: var-decl .

    $default  reduce using rule 24 (block_p)


State 66

   26 block_p: statement .

    $default  reduce using rule 26 (block_p)


State 67

   30 statement: assign . ";"

    ";"  shift, and go to state 105


State 68

   31 statement: method-call_stmt . ";"

    ";"  shift, and go to state 106


State 69

   39 assign: lvalue . "=" expr

    "="  shift, and go to state 107


State 70

   10 mult-field: mult-field "," Id "[" intConstant "]" .

    $default  reduce using rule 10 (mult-field)


State 71

   34 statement: KwBreak ";" .

    $default  reduce using rule 34 (statement)


State 72

   37 statement: KwContinue ";" .

    $default  reduce using rule 37 (statement)


State 73

   35 statement: KwFor "(" . for_assign ";" expr ";" for_assign ")" block
   39 assign: . lvalue "=" expr
   42 for_assign: . for_assign "," assign
   43           | . assign
   59 lvalue: . Id
   60       | . Id "[" expr "]"

    Id  shift, and go to state 108

    assign      go to state 109
    for_assign  go to state 110
    lvalue      go to state 69


State 74

   32 statement: KwIf "(" . expr ")" block else_opt
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 111
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 75

   51 method-call_expr: KwPrint . "(" argument ")"

    "("  shift, and go to state 112


State 76

   52 method-call_expr: KwPrintln . "(" argument ")"

    "("  shift, and go to state 113


State 77

   53 method-call_expr: KwRead . "(" ")"

    "("  shift, and go to state 114


State 78

   54 method-call_expr: KwRandom . "(" expr ")"

    "("  shift, and go to state 115


State 79

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   67     | "(" . expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 116
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 80

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   65     | "!" . expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 117
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 81

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   66     | "-" . expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 118
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 82

   50 method-call_expr: Id . "(" method-call_params ")"
   59 lvalue: Id .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "&&", "||", "==", "<<", ">>"]
   60       | Id . "[" expr "]"

    "["  shift, and go to state 98
    "("  shift, and go to state 119

    $default  reduce using rule 59 (lvalue)


State 83

   36 statement: KwReturn return_expr . ";"

    ";"  shift, and go to state 120


State 84

   62 expr: method-call_expr .

    $default  reduce using rule 62 (expr)


State 85

   61 expr: lvalue .

    $default  reduce using rule 61 (expr)


State 86

   44 return_expr: expr .  [";"]
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 44 (return_expr)


State 87

   64 expr: bin-op .

    $default  reduce using rule 64 (expr)


State 88

   68 bin-op: arith-op .

    $default  reduce using rule 68 (bin-op)


State 89

   69 bin-op: rel-op .

    $default  reduce using rule 69 (bin-op)


State 90

   71 bin-op: eq-op .

    $default  reduce using rule 71 (bin-op)


State 91

   70 bin-op: cond-op .

    $default  reduce using rule 70 (bin-op)


State 92

   63 expr: constant .

    $default  reduce using rule 63 (expr)


State 93

   33 statement: KwWhile "(" . expr ")" block
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 136
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 94

   46 method-call_stmt: KwPrint "(" . argument ")"
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   57 argument: . StringConstant
   58         | . expr
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse         shift, and go to state 31
    KwTrue          shift, and go to state 32
    KwPrint         shift, and go to state 75
    KwPrintln       shift, and go to state 76
    KwRead          shift, and go to state 77
    KwRandom        shift, and go to state 78
    "("             shift, and go to state 79
    "!"             shift, and go to state 80
    "-"             shift, and go to state 81
    intConstant     shift, and go to state 33
    CharConstant    shift, and go to state 34
    Id              shift, and go to state 82
    StringConstant  shift, and go to state 137

    method-call_expr  go to state 84
    argument          go to state 138
    lvalue            go to state 85
    expr              go to state 139
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 95

   47 method-call_stmt: KwPrintln "(" . argument ")"
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   57 argument: . StringConstant
   58         | . expr
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse         shift, and go to state 31
    KwTrue          shift, and go to state 32
    KwPrint         shift, and go to state 75
    KwPrintln       shift, and go to state 76
    KwRead          shift, and go to state 77
    KwRandom        shift, and go to state 78
    "("             shift, and go to state 79
    "!"             shift, and go to state 80
    "-"             shift, and go to state 81
    intConstant     shift, and go to state 33
    CharConstant    shift, and go to state 34
    Id              shift, and go to state 82
    StringConstant  shift, and go to state 137

    method-call_expr  go to state 84
    argument          go to state 140
    lvalue            go to state 85
    expr              go to state 139
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 96

   48 method-call_stmt: KwRead "(" . ")"

    ")"  shift, and go to state 141


State 97

   49 method-call_stmt: KwRandom "(" . expr ")"
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 142
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 98

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   60       | Id "[" . expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 143
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 99

   45 method-call_stmt: Id "(" . method-call_params ")"
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   55 method-call_params: . method-call_params "," expr
   56                   | . expr
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr    go to state 84
    method-call_params  go to state 144
    lvalue              go to state 85
    expr                go to state 145
    bin-op              go to state 87
    arith-op            go to state 88
    rel-op              go to state 89
    eq-op               go to state 90
    cond-op             go to state 91
    constant            go to state 92


State 100

   29 var-decl_p: Id .

    $default  reduce using rule 29 (var-decl_p)


State 101

   27 var-decl: type var-decl_p . ";"
   28 var-decl_p: var-decl_p . "," Id

    ","  shift, and go to state 146
    ";"  shift, and go to state 147


State 102

   21 block: "{" block_p "}" .

    $default  reduce using rule 21 (block)


State 103

   23 block_p: block_p var-decl .

    $default  reduce using rule 23 (block_p)


State 104

   25 block_p: block_p statement .

    $default  reduce using rule 25 (block_p)


State 105

   30 statement: assign ";" .

    $default  reduce using rule 30 (statement)


State 106

   31 statement: method-call_stmt ";" .

    $default  reduce using rule 31 (statement)


State 107

   39 assign: lvalue "=" . expr
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 148
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 108

   59 lvalue: Id .  ["="]
   60       | Id . "[" expr "]"

    "["  shift, and go to state 98

    $default  reduce using rule 59 (lvalue)


State 109

   43 for_assign: assign .

    $default  reduce using rule 43 (for_assign)


State 110

   35 statement: KwFor "(" for_assign . ";" expr ";" for_assign ")" block
   42 for_assign: for_assign . "," assign

    ","  shift, and go to state 149
    ";"  shift, and go to state 150


State 111

   32 statement: KwIf "(" expr . ")" block else_opt
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ")"   shift, and go to state 151
    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135


State 112

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   51                 | KwPrint "(" . argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   57 argument: . StringConstant
   58         | . expr
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse         shift, and go to state 31
    KwTrue          shift, and go to state 32
    KwPrint         shift, and go to state 75
    KwPrintln       shift, and go to state 76
    KwRead          shift, and go to state 77
    KwRandom        shift, and go to state 78
    "("             shift, and go to state 79
    "!"             shift, and go to state 80
    "-"             shift, and go to state 81
    intConstant     shift, and go to state 33
    CharConstant    shift, and go to state 34
    Id              shift, and go to state 82
    StringConstant  shift, and go to state 137

    method-call_expr  go to state 84
    argument          go to state 152
    lvalue            go to state 85
    expr              go to state 139
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 113

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   52                 | KwPrintln "(" . argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   57 argument: . StringConstant
   58         | . expr
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse         shift, and go to state 31
    KwTrue          shift, and go to state 32
    KwPrint         shift, and go to state 75
    KwPrintln       shift, and go to state 76
    KwRead          shift, and go to state 77
    KwRandom        shift, and go to state 78
    "("             shift, and go to state 79
    "!"             shift, and go to state 80
    "-"             shift, and go to state 81
    intConstant     shift, and go to state 33
    CharConstant    shift, and go to state 34
    Id              shift, and go to state 82
    StringConstant  shift, and go to state 137

    method-call_expr  go to state 84
    argument          go to state 153
    lvalue            go to state 85
    expr              go to state 139
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 114

   53 method-call_expr: KwRead "(" . ")"

    ")"  shift, and go to state 154


State 115

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   54                 | KwRandom "(" . expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 155
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 116

   67 expr: "(" expr . ")"
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ")"   shift, and go to state 156
    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135


State 117

   65 expr: "!" expr .  ["]", ",", ";", ")"]
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 65 (expr)

    Conflict between rule 65 and token "+" resolved as shift ("!" < "+").
    Conflict between rule 65 and token "-" resolved as shift ("!" < "-").
    Conflict between rule 65 and token "/" resolved as shift ("!" < "/").
    Conflict between rule 65 and token "*" resolved as shift ("!" < "*").
    Conflict between rule 65 and token "%" resolved as shift ("!" < "%").
    Conflict between rule 65 and token ">" resolved as shift ("!" < ">").
    Conflict between rule 65 and token "<" resolved as shift ("!" < "<").
    Conflict between rule 65 and token ">=" resolved as shift ("!" < ">=").
    Conflict between rule 65 and token "<=" resolved as shift ("!" < "<=").
    Conflict between rule 65 and token "!=" resolved as shift ("!" < "!=").
    Conflict between rule 65 and token "&&" resolved as shift ("!" < "&&").
    Conflict between rule 65 and token "||" resolved as shift ("!" < "||").
    Conflict between rule 65 and token "==" resolved as shift ("!" < "==").
    Conflict between rule 65 and token "<<" resolved as shift ("!" < "<<").
    Conflict between rule 65 and token ">>" resolved as shift ("!" < ">>").


State 118

   66 expr: "-" expr .  ["]", ",", ";", ")", "+", "-", "/", "*"]
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 66 (expr)

    Conflict between rule 66 and token "+" resolved as reduce (%left "+").
    Conflict between rule 66 and token "-" resolved as reduce (%left "-").
    Conflict between rule 66 and token "/" resolved as reduce ("/" < "-").
    Conflict between rule 66 and token "*" resolved as reduce ("*" < "-").
    Conflict between rule 66 and token "%" resolved as shift ("-" < "%").
    Conflict between rule 66 and token ">" resolved as shift ("-" < ">").
    Conflict between rule 66 and token "<" resolved as shift ("-" < "<").
    Conflict between rule 66 and token ">=" resolved as shift ("-" < ">=").
    Conflict between rule 66 and token "<=" resolved as shift ("-" < "<=").
    Conflict between rule 66 and token "!=" resolved as shift ("-" < "!=").
    Conflict between rule 66 and token "&&" resolved as shift ("-" < "&&").
    Conflict between rule 66 and token "||" resolved as shift ("-" < "||").
    Conflict between rule 66 and token "==" resolved as shift ("-" < "==").
    Conflict between rule 66 and token "<<" resolved as shift ("-" < "<<").
    Conflict between rule 66 and token ">>" resolved as shift ("-" < ">>").


State 119

   50 method-call_expr: . Id "(" method-call_params ")"
   50                 | Id "(" . method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   55 method-call_params: . method-call_params "," expr
   56                   | . expr
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr    go to state 84
    method-call_params  go to state 157
    lvalue              go to state 85
    expr                go to state 145
    bin-op              go to state 87
    arith-op            go to state 88
    rel-op              go to state 89
    eq-op               go to state 90
    cond-op             go to state 91
    constant            go to state 92


State 120

   36 statement: KwReturn return_expr ";" .

    $default  reduce using rule 36 (statement)


State 121

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   72         | expr "+" . expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 158
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 122

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   73         | expr "-" . expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 159
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 123

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   75         | expr "/" . expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 160
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 124

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   74         | expr "*" . expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 161
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 125

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   78         | expr "%" . expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 162
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 126

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   80       | expr ">" . expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 163
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 127

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   79       | expr "<" . expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 164
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 128

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   82       | expr ">=" . expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 165
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 129

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   81       | expr "<=" . expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 166
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 130

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   84      | expr "!=" . expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 167
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 131

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   85        | expr "&&" . expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 168
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 132

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   86        | expr "||" . expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 169
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 133

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   83      | expr "==" . expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 170
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 134

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   76         | expr "<<" . expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 171
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 135

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   77         | expr ">>" . expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 172
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 136

   33 statement: KwWhile "(" expr . ")" block
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ")"   shift, and go to state 173
    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135


State 137

   57 argument: StringConstant .

    $default  reduce using rule 57 (argument)


State 138

   46 method-call_stmt: KwPrint "(" argument . ")"

    ")"  shift, and go to state 174


State 139

   58 argument: expr .  [")"]
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 58 (argument)


State 140

   47 method-call_stmt: KwPrintln "(" argument . ")"

    ")"  shift, and go to state 175


State 141

   48 method-call_stmt: KwRead "(" ")" .

    $default  reduce using rule 48 (method-call_stmt)


State 142

   49 method-call_stmt: KwRandom "(" expr . ")"
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ")"   shift, and go to state 176
    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135


State 143

   60 lvalue: Id "[" expr . "]"
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "]"   shift, and go to state 177
    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135


State 144

   45 method-call_stmt: Id "(" method-call_params . ")"
   55 method-call_params: method-call_params . "," expr

    ","  shift, and go to state 178
    ")"  shift, and go to state 179


State 145

   56 method-call_params: expr .  [",", ")"]
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 56 (method-call_params)


State 146

   28 var-decl_p: var-decl_p "," . Id

    Id  shift, and go to state 180


State 147

   27 var-decl: type var-decl_p ";" .

    $default  reduce using rule 27 (var-decl)


State 148

   39 assign: lvalue "=" expr .  [",", ";", ")"]
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 39 (assign)


State 149

   39 assign: . lvalue "=" expr
   42 for_assign: for_assign "," . assign
   59 lvalue: . Id
   60       | . Id "[" expr "]"

    Id  shift, and go to state 108

    assign  go to state 181
    lvalue  go to state 69


State 150

   35 statement: KwFor "(" for_assign ";" . expr ";" for_assign ")" block
   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 182
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 151

   21 block: . "{" block_p "}"
   22      | . "{" "}"
   32 statement: KwIf "(" expr ")" . block else_opt

    "{"  shift, and go to state 45

    block  go to state 183


State 152

   51 method-call_expr: KwPrint "(" argument . ")"

    ")"  shift, and go to state 184


State 153

   52 method-call_expr: KwPrintln "(" argument . ")"

    ")"  shift, and go to state 185


State 154

   53 method-call_expr: KwRead "(" ")" .

    $default  reduce using rule 53 (method-call_expr)


State 155

   54 method-call_expr: KwRandom "(" expr . ")"
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ")"   shift, and go to state 186
    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135


State 156

   67 expr: "(" expr ")" .

    $default  reduce using rule 67 (expr)


State 157

   50 method-call_expr: Id "(" method-call_params . ")"
   55 method-call_params: method-call_params . "," expr

    ","  shift, and go to state 178
    ")"  shift, and go to state 187


State 158

   72 arith-op: expr . "+" expr
   72         | expr "+" expr .  ["]", ",", ";", ")", "+", "-", "/", "*"]
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 72 (arith-op)

    Conflict between rule 72 and token "+" resolved as reduce (%left "+").
    Conflict between rule 72 and token "-" resolved as reduce (%left "-").
    Conflict between rule 72 and token "/" resolved as reduce ("/" < "+").
    Conflict between rule 72 and token "*" resolved as reduce ("*" < "+").
    Conflict between rule 72 and token "%" resolved as shift ("+" < "%").
    Conflict between rule 72 and token ">" resolved as shift ("+" < ">").
    Conflict between rule 72 and token "<" resolved as shift ("+" < "<").
    Conflict between rule 72 and token ">=" resolved as shift ("+" < ">=").
    Conflict between rule 72 and token "<=" resolved as shift ("+" < "<=").
    Conflict between rule 72 and token "!=" resolved as shift ("+" < "!=").
    Conflict between rule 72 and token "&&" resolved as shift ("+" < "&&").
    Conflict between rule 72 and token "||" resolved as shift ("+" < "||").
    Conflict between rule 72 and token "==" resolved as shift ("+" < "==").
    Conflict between rule 72 and token "<<" resolved as shift ("+" < "<<").
    Conflict between rule 72 and token ">>" resolved as shift ("+" < ">>").


State 159

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   73         | expr "-" expr .  ["]", ",", ";", ")", "+", "-", "/", "*"]
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 73 (arith-op)

    Conflict between rule 73 and token "+" resolved as reduce (%left "+").
    Conflict between rule 73 and token "-" resolved as reduce (%left "-").
    Conflict between rule 73 and token "/" resolved as reduce ("/" < "-").
    Conflict between rule 73 and token "*" resolved as reduce ("*" < "-").
    Conflict between rule 73 and token "%" resolved as shift ("-" < "%").
    Conflict between rule 73 and token ">" resolved as shift ("-" < ">").
    Conflict between rule 73 and token "<" resolved as shift ("-" < "<").
    Conflict between rule 73 and token ">=" resolved as shift ("-" < ">=").
    Conflict between rule 73 and token "<=" resolved as shift ("-" < "<=").
    Conflict between rule 73 and token "!=" resolved as shift ("-" < "!=").
    Conflict between rule 73 and token "&&" resolved as shift ("-" < "&&").
    Conflict between rule 73 and token "||" resolved as shift ("-" < "||").
    Conflict between rule 73 and token "==" resolved as shift ("-" < "==").
    Conflict between rule 73 and token "<<" resolved as shift ("-" < "<<").
    Conflict between rule 73 and token ">>" resolved as shift ("-" < ">>").


State 160

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   75         | expr "/" expr .  ["]", ",", ";", ")", "/", "*"]
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 75 (arith-op)

    Conflict between rule 75 and token "+" resolved as shift ("/" < "+").
    Conflict between rule 75 and token "-" resolved as shift ("/" < "-").
    Conflict between rule 75 and token "/" resolved as reduce (%left "/").
    Conflict between rule 75 and token "*" resolved as reduce (%left "*").
    Conflict between rule 75 and token "%" resolved as shift ("/" < "%").
    Conflict between rule 75 and token ">" resolved as shift ("/" < ">").
    Conflict between rule 75 and token "<" resolved as shift ("/" < "<").
    Conflict between rule 75 and token ">=" resolved as shift ("/" < ">=").
    Conflict between rule 75 and token "<=" resolved as shift ("/" < "<=").
    Conflict between rule 75 and token "!=" resolved as shift ("/" < "!=").
    Conflict between rule 75 and token "&&" resolved as shift ("/" < "&&").
    Conflict between rule 75 and token "||" resolved as shift ("/" < "||").
    Conflict between rule 75 and token "==" resolved as shift ("/" < "==").
    Conflict between rule 75 and token "<<" resolved as shift ("/" < "<<").
    Conflict between rule 75 and token ">>" resolved as shift ("/" < ">>").


State 161

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   74         | expr "*" expr .  ["]", ",", ";", ")", "/", "*"]
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 74 (arith-op)

    Conflict between rule 74 and token "+" resolved as shift ("*" < "+").
    Conflict between rule 74 and token "-" resolved as shift ("*" < "-").
    Conflict between rule 74 and token "/" resolved as reduce (%left "/").
    Conflict between rule 74 and token "*" resolved as reduce (%left "*").
    Conflict between rule 74 and token "%" resolved as shift ("*" < "%").
    Conflict between rule 74 and token ">" resolved as shift ("*" < ">").
    Conflict between rule 74 and token "<" resolved as shift ("*" < "<").
    Conflict between rule 74 and token ">=" resolved as shift ("*" < ">=").
    Conflict between rule 74 and token "<=" resolved as shift ("*" < "<=").
    Conflict between rule 74 and token "!=" resolved as shift ("*" < "!=").
    Conflict between rule 74 and token "&&" resolved as shift ("*" < "&&").
    Conflict between rule 74 and token "||" resolved as shift ("*" < "||").
    Conflict between rule 74 and token "==" resolved as shift ("*" < "==").
    Conflict between rule 74 and token "<<" resolved as shift ("*" < "<<").
    Conflict between rule 74 and token ">>" resolved as shift ("*" < ">>").


State 162

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   78         | expr "%" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%"]
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 78 (arith-op)

    Conflict between rule 78 and token "+" resolved as reduce ("+" < "%").
    Conflict between rule 78 and token "-" resolved as reduce ("-" < "%").
    Conflict between rule 78 and token "/" resolved as reduce ("/" < "%").
    Conflict between rule 78 and token "*" resolved as reduce ("*" < "%").
    Conflict between rule 78 and token "%" resolved as reduce (%left "%").
    Conflict between rule 78 and token ">" resolved as shift ("%" < ">").
    Conflict between rule 78 and token "<" resolved as shift ("%" < "<").
    Conflict between rule 78 and token ">=" resolved as shift ("%" < ">=").
    Conflict between rule 78 and token "<=" resolved as shift ("%" < "<=").
    Conflict between rule 78 and token "!=" resolved as shift ("%" < "!=").
    Conflict between rule 78 and token "&&" resolved as shift ("%" < "&&").
    Conflict between rule 78 and token "||" resolved as shift ("%" < "||").
    Conflict between rule 78 and token "==" resolved as shift ("%" < "==").
    Conflict between rule 78 and token "<<" resolved as shift ("%" < "<<").
    Conflict between rule 78 and token ">>" resolved as shift ("%" < ">>").


State 163

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   80       | expr ">" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "<<", ">>"]
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133

    $default  reduce using rule 80 (rel-op)

    Conflict between rule 80 and token "+" resolved as reduce ("+" < ">").
    Conflict between rule 80 and token "-" resolved as reduce ("-" < ">").
    Conflict between rule 80 and token "/" resolved as reduce ("/" < ">").
    Conflict between rule 80 and token "*" resolved as reduce ("*" < ">").
    Conflict between rule 80 and token "%" resolved as reduce ("%" < ">").
    Conflict between rule 80 and token ">" resolved as reduce (%left ">").
    Conflict between rule 80 and token "<" resolved as reduce (%left "<").
    Conflict between rule 80 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 80 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 80 and token "!=" resolved as shift (">" < "!=").
    Conflict between rule 80 and token "&&" resolved as shift (">" < "&&").
    Conflict between rule 80 and token "||" resolved as shift (">" < "||").
    Conflict between rule 80 and token "==" resolved as shift (">" < "==").
    Conflict between rule 80 and token "<<" resolved as reduce ("<<" < ">").
    Conflict between rule 80 and token ">>" resolved as reduce (">>" < ">").


State 164

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   79       | expr "<" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "<<", ">>"]
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133

    $default  reduce using rule 79 (rel-op)

    Conflict between rule 79 and token "+" resolved as reduce ("+" < "<").
    Conflict between rule 79 and token "-" resolved as reduce ("-" < "<").
    Conflict between rule 79 and token "/" resolved as reduce ("/" < "<").
    Conflict between rule 79 and token "*" resolved as reduce ("*" < "<").
    Conflict between rule 79 and token "%" resolved as reduce ("%" < "<").
    Conflict between rule 79 and token ">" resolved as reduce (%left ">").
    Conflict between rule 79 and token "<" resolved as reduce (%left "<").
    Conflict between rule 79 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 79 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 79 and token "!=" resolved as shift ("<" < "!=").
    Conflict between rule 79 and token "&&" resolved as shift ("<" < "&&").
    Conflict between rule 79 and token "||" resolved as shift ("<" < "||").
    Conflict between rule 79 and token "==" resolved as shift ("<" < "==").
    Conflict between rule 79 and token "<<" resolved as reduce ("<<" < "<").
    Conflict between rule 79 and token ">>" resolved as reduce (">>" < "<").


State 165

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   82       | expr ">=" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "<<", ">>"]
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133

    $default  reduce using rule 82 (rel-op)

    Conflict between rule 82 and token "+" resolved as reduce ("+" < ">=").
    Conflict between rule 82 and token "-" resolved as reduce ("-" < ">=").
    Conflict between rule 82 and token "/" resolved as reduce ("/" < ">=").
    Conflict between rule 82 and token "*" resolved as reduce ("*" < ">=").
    Conflict between rule 82 and token "%" resolved as reduce ("%" < ">=").
    Conflict between rule 82 and token ">" resolved as reduce (%left ">").
    Conflict between rule 82 and token "<" resolved as reduce (%left "<").
    Conflict between rule 82 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 82 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 82 and token "!=" resolved as shift (">=" < "!=").
    Conflict between rule 82 and token "&&" resolved as shift (">=" < "&&").
    Conflict between rule 82 and token "||" resolved as shift (">=" < "||").
    Conflict between rule 82 and token "==" resolved as shift (">=" < "==").
    Conflict between rule 82 and token "<<" resolved as reduce ("<<" < ">=").
    Conflict between rule 82 and token ">>" resolved as reduce (">>" < ">=").


State 166

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   81       | expr "<=" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "<<", ">>"]
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133

    $default  reduce using rule 81 (rel-op)

    Conflict between rule 81 and token "+" resolved as reduce ("+" < "<=").
    Conflict between rule 81 and token "-" resolved as reduce ("-" < "<=").
    Conflict between rule 81 and token "/" resolved as reduce ("/" < "<=").
    Conflict between rule 81 and token "*" resolved as reduce ("*" < "<=").
    Conflict between rule 81 and token "%" resolved as reduce ("%" < "<=").
    Conflict between rule 81 and token ">" resolved as reduce (%left ">").
    Conflict between rule 81 and token "<" resolved as reduce (%left "<").
    Conflict between rule 81 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 81 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 81 and token "!=" resolved as shift ("<=" < "!=").
    Conflict between rule 81 and token "&&" resolved as shift ("<=" < "&&").
    Conflict between rule 81 and token "||" resolved as shift ("<=" < "||").
    Conflict between rule 81 and token "==" resolved as shift ("<=" < "==").
    Conflict between rule 81 and token "<<" resolved as reduce ("<<" < "<=").
    Conflict between rule 81 and token ">>" resolved as reduce (">>" < "<=").


State 167

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   84      | expr "!=" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "==", "<<", ">>"]
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132

    $default  reduce using rule 84 (eq-op)

    Conflict between rule 84 and token "+" resolved as reduce ("+" < "!=").
    Conflict between rule 84 and token "-" resolved as reduce ("-" < "!=").
    Conflict between rule 84 and token "/" resolved as reduce ("/" < "!=").
    Conflict between rule 84 and token "*" resolved as reduce ("*" < "!=").
    Conflict between rule 84 and token "%" resolved as reduce ("%" < "!=").
    Conflict between rule 84 and token ">" resolved as reduce (">" < "!=").
    Conflict between rule 84 and token "<" resolved as reduce ("<" < "!=").
    Conflict between rule 84 and token ">=" resolved as reduce (">=" < "!=").
    Conflict between rule 84 and token "<=" resolved as reduce ("<=" < "!=").
    Conflict between rule 84 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 84 and token "&&" resolved as shift ("!=" < "&&").
    Conflict between rule 84 and token "||" resolved as shift ("!=" < "||").
    Conflict between rule 84 and token "==" resolved as reduce (%left "==").
    Conflict between rule 84 and token "<<" resolved as reduce ("<<" < "!=").
    Conflict between rule 84 and token ">>" resolved as reduce (">>" < "!=").


State 168

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   85        | expr "&&" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "&&", "==", "<<", ">>"]
   86        | expr . "||" expr

    "||"  shift, and go to state 132

    $default  reduce using rule 85 (cond-op)

    Conflict between rule 85 and token "+" resolved as reduce ("+" < "&&").
    Conflict between rule 85 and token "-" resolved as reduce ("-" < "&&").
    Conflict between rule 85 and token "/" resolved as reduce ("/" < "&&").
    Conflict between rule 85 and token "*" resolved as reduce ("*" < "&&").
    Conflict between rule 85 and token "%" resolved as reduce ("%" < "&&").
    Conflict between rule 85 and token ">" resolved as reduce (">" < "&&").
    Conflict between rule 85 and token "<" resolved as reduce ("<" < "&&").
    Conflict between rule 85 and token ">=" resolved as reduce (">=" < "&&").
    Conflict between rule 85 and token "<=" resolved as reduce ("<=" < "&&").
    Conflict between rule 85 and token "!=" resolved as reduce ("!=" < "&&").
    Conflict between rule 85 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 85 and token "||" resolved as shift ("&&" < "||").
    Conflict between rule 85 and token "==" resolved as reduce ("==" < "&&").
    Conflict between rule 85 and token "<<" resolved as reduce ("<<" < "&&").
    Conflict between rule 85 and token ">>" resolved as reduce (">>" < "&&").


State 169

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr
   86        | expr "||" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "&&", "||", "==", "<<", ">>"]

    $default  reduce using rule 86 (cond-op)

    Conflict between rule 86 and token "+" resolved as reduce ("+" < "||").
    Conflict between rule 86 and token "-" resolved as reduce ("-" < "||").
    Conflict between rule 86 and token "/" resolved as reduce ("/" < "||").
    Conflict between rule 86 and token "*" resolved as reduce ("*" < "||").
    Conflict between rule 86 and token "%" resolved as reduce ("%" < "||").
    Conflict between rule 86 and token ">" resolved as reduce (">" < "||").
    Conflict between rule 86 and token "<" resolved as reduce ("<" < "||").
    Conflict between rule 86 and token ">=" resolved as reduce (">=" < "||").
    Conflict between rule 86 and token "<=" resolved as reduce ("<=" < "||").
    Conflict between rule 86 and token "!=" resolved as reduce ("!=" < "||").
    Conflict between rule 86 and token "&&" resolved as reduce ("&&" < "||").
    Conflict between rule 86 and token "||" resolved as reduce (%left "||").
    Conflict between rule 86 and token "==" resolved as reduce ("==" < "||").
    Conflict between rule 86 and token "<<" resolved as reduce ("<<" < "||").
    Conflict between rule 86 and token ">>" resolved as reduce (">>" < "||").


State 170

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   83      | expr "==" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "==", "<<", ">>"]
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132

    $default  reduce using rule 83 (eq-op)

    Conflict between rule 83 and token "+" resolved as reduce ("+" < "==").
    Conflict between rule 83 and token "-" resolved as reduce ("-" < "==").
    Conflict between rule 83 and token "/" resolved as reduce ("/" < "==").
    Conflict between rule 83 and token "*" resolved as reduce ("*" < "==").
    Conflict between rule 83 and token "%" resolved as reduce ("%" < "==").
    Conflict between rule 83 and token ">" resolved as reduce (">" < "==").
    Conflict between rule 83 and token "<" resolved as reduce ("<" < "==").
    Conflict between rule 83 and token ">=" resolved as reduce (">=" < "==").
    Conflict between rule 83 and token "<=" resolved as reduce ("<=" < "==").
    Conflict between rule 83 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 83 and token "&&" resolved as shift ("==" < "&&").
    Conflict between rule 83 and token "||" resolved as shift ("==" < "||").
    Conflict between rule 83 and token "==" resolved as reduce (%left "==").
    Conflict between rule 83 and token "<<" resolved as reduce ("<<" < "==").
    Conflict between rule 83 and token ">>" resolved as reduce (">>" < "==").


State 171

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   76         | expr "<<" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", "<<", ">>"]
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133

    $default  reduce using rule 76 (arith-op)

    Conflict between rule 76 and token "+" resolved as reduce ("+" < "<<").
    Conflict between rule 76 and token "-" resolved as reduce ("-" < "<<").
    Conflict between rule 76 and token "/" resolved as reduce ("/" < "<<").
    Conflict between rule 76 and token "*" resolved as reduce ("*" < "<<").
    Conflict between rule 76 and token "%" resolved as reduce ("%" < "<<").
    Conflict between rule 76 and token ">" resolved as shift ("<<" < ">").
    Conflict between rule 76 and token "<" resolved as shift ("<<" < "<").
    Conflict between rule 76 and token ">=" resolved as shift ("<<" < ">=").
    Conflict between rule 76 and token "<=" resolved as shift ("<<" < "<=").
    Conflict between rule 76 and token "!=" resolved as shift ("<<" < "!=").
    Conflict between rule 76 and token "&&" resolved as shift ("<<" < "&&").
    Conflict between rule 76 and token "||" resolved as shift ("<<" < "||").
    Conflict between rule 76 and token "==" resolved as shift ("<<" < "==").
    Conflict between rule 76 and token "<<" resolved as reduce (%left "<<").
    Conflict between rule 76 and token ">>" resolved as reduce (%left ">>").


State 172

   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   77         | expr ">>" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", "<<", ">>"]
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133

    $default  reduce using rule 77 (arith-op)

    Conflict between rule 77 and token "+" resolved as reduce ("+" < ">>").
    Conflict between rule 77 and token "-" resolved as reduce ("-" < ">>").
    Conflict between rule 77 and token "/" resolved as reduce ("/" < ">>").
    Conflict between rule 77 and token "*" resolved as reduce ("*" < ">>").
    Conflict between rule 77 and token "%" resolved as reduce ("%" < ">>").
    Conflict between rule 77 and token ">" resolved as shift (">>" < ">").
    Conflict between rule 77 and token "<" resolved as shift (">>" < "<").
    Conflict between rule 77 and token ">=" resolved as shift (">>" < ">=").
    Conflict between rule 77 and token "<=" resolved as shift (">>" < "<=").
    Conflict between rule 77 and token "!=" resolved as shift (">>" < "!=").
    Conflict between rule 77 and token "&&" resolved as shift (">>" < "&&").
    Conflict between rule 77 and token "||" resolved as shift (">>" < "||").
    Conflict between rule 77 and token "==" resolved as shift (">>" < "==").
    Conflict between rule 77 and token "<<" resolved as reduce (%left "<<").
    Conflict between rule 77 and token ">>" resolved as reduce (%left ">>").


State 173

   21 block: . "{" block_p "}"
   22      | . "{" "}"
   33 statement: KwWhile "(" expr ")" . block

    "{"  shift, and go to state 45

    block  go to state 188


State 174

   46 method-call_stmt: KwPrint "(" argument ")" .

    $default  reduce using rule 46 (method-call_stmt)


State 175

   47 method-call_stmt: KwPrintln "(" argument ")" .

    $default  reduce using rule 47 (method-call_stmt)


State 176

   49 method-call_stmt: KwRandom "(" expr ")" .

    $default  reduce using rule 49 (method-call_stmt)


State 177

   60 lvalue: Id "[" expr "]" .

    $default  reduce using rule 60 (lvalue)


State 178

   50 method-call_expr: . Id "(" method-call_params ")"
   51                 | . KwPrint "(" argument ")"
   52                 | . KwPrintln "(" argument ")"
   53                 | . KwRead "(" ")"
   54                 | . KwRandom "(" expr ")"
   55 method-call_params: method-call_params "," . expr
   59 lvalue: . Id
   60       | . Id "[" expr "]"
   61 expr: . lvalue
   62     | . method-call_expr
   63     | . constant
   64     | . bin-op
   65     | . "!" expr
   66     | . "-" expr
   67     | . "(" expr ")"
   68 bin-op: . arith-op
   69       | . rel-op
   70       | . cond-op
   71       | . eq-op
   72 arith-op: . expr "+" expr
   73         | . expr "-" expr
   74         | . expr "*" expr
   75         | . expr "/" expr
   76         | . expr "<<" expr
   77         | . expr ">>" expr
   78         | . expr "%" expr
   79 rel-op: . expr "<" expr
   80       | . expr ">" expr
   81       | . expr "<=" expr
   82       | . expr ">=" expr
   83 eq-op: . expr "==" expr
   84      | . expr "!=" expr
   85 cond-op: . expr "&&" expr
   86        | . expr "||" expr
   87 constant: . intConstant
   88         | . CharConstant
   89         | . KwTrue
   90         | . KwFalse

    KwFalse       shift, and go to state 31
    KwTrue        shift, and go to state 32
    KwPrint       shift, and go to state 75
    KwPrintln     shift, and go to state 76
    KwRead        shift, and go to state 77
    KwRandom      shift, and go to state 78
    "("           shift, and go to state 79
    "!"           shift, and go to state 80
    "-"           shift, and go to state 81
    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 82

    method-call_expr  go to state 84
    lvalue            go to state 85
    expr              go to state 189
    bin-op            go to state 87
    arith-op          go to state 88
    rel-op            go to state 89
    eq-op             go to state 90
    cond-op           go to state 91
    constant          go to state 92


State 179

   45 method-call_stmt: Id "(" method-call_params ")" .

    $default  reduce using rule 45 (method-call_stmt)


State 180

   28 var-decl_p: var-decl_p "," Id .

    $default  reduce using rule 28 (var-decl_p)


State 181

   42 for_assign: for_assign "," assign .

    $default  reduce using rule 42 (for_assign)


State 182

   35 statement: KwFor "(" for_assign ";" expr . ";" for_assign ")" block
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    ";"   shift, and go to state 190
    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135


State 183

   32 statement: KwIf "(" expr ")" block . else_opt
   40 else_opt: . KwElse block
   41         | . %empty  [KwBool, KwBreak, KwContinue, KwFor, KwIf, KwInt, KwReturn, KwWhile, KwPrint, KwPrintln, KwRead, KwRandom, "{", "}", Id]

    KwElse  shift, and go to state 191

    $default  reduce using rule 41 (else_opt)

    else_opt  go to state 192


State 184

   51 method-call_expr: KwPrint "(" argument ")" .

    $default  reduce using rule 51 (method-call_expr)


State 185

   52 method-call_expr: KwPrintln "(" argument ")" .

    $default  reduce using rule 52 (method-call_expr)


State 186

   54 method-call_expr: KwRandom "(" expr ")" .

    $default  reduce using rule 54 (method-call_expr)


State 187

   50 method-call_expr: Id "(" method-call_params ")" .

    $default  reduce using rule 50 (method-call_expr)


State 188

   33 statement: KwWhile "(" expr ")" block .

    $default  reduce using rule 33 (statement)


State 189

   55 method-call_params: method-call_params "," expr .  [",", ")"]
   72 arith-op: expr . "+" expr
   73         | expr . "-" expr
   74         | expr . "*" expr
   75         | expr . "/" expr
   76         | expr . "<<" expr
   77         | expr . ">>" expr
   78         | expr . "%" expr
   79 rel-op: expr . "<" expr
   80       | expr . ">" expr
   81       | expr . "<=" expr
   82       | expr . ">=" expr
   83 eq-op: expr . "==" expr
   84      | expr . "!=" expr
   85 cond-op: expr . "&&" expr
   86        | expr . "||" expr

    "+"   shift, and go to state 121
    "-"   shift, and go to state 122
    "/"   shift, and go to state 123
    "*"   shift, and go to state 124
    "%"   shift, and go to state 125
    ">"   shift, and go to state 126
    "<"   shift, and go to state 127
    ">="  shift, and go to state 128
    "<="  shift, and go to state 129
    "!="  shift, and go to state 130
    "&&"  shift, and go to state 131
    "||"  shift, and go to state 132
    "=="  shift, and go to state 133
    "<<"  shift, and go to state 134
    ">>"  shift, and go to state 135

    $default  reduce using rule 55 (method-call_params)


State 190

   35 statement: KwFor "(" for_assign ";" expr ";" . for_assign ")" block
   39 assign: . lvalue "=" expr
   42 for_assign: . for_assign "," assign
   43           | . assign
   59 lvalue: . Id
   60       | . Id "[" expr "]"

    Id  shift, and go to state 108

    assign      go to state 109
    for_assign  go to state 193
    lvalue      go to state 69


State 191

   21 block: . "{" block_p "}"
   22      | . "{" "}"
   40 else_opt: KwElse . block

    "{"  shift, and go to state 45

    block  go to state 194


State 192

   32 statement: KwIf "(" expr ")" block else_opt .

    $default  reduce using rule 32 (statement)


State 193

   35 statement: KwFor "(" for_assign ";" expr ";" for_assign . ")" block
   42 for_assign: for_assign . "," assign

    ","  shift, and go to state 149
    ")"  shift, and go to state 195


State 194

   40 else_opt: KwElse block .

    $default  reduce using rule 40 (else_opt)


State 195

   21 block: . "{" block_p "}"
   22      | . "{" "}"
   35 statement: KwFor "(" for_assign ";" expr ";" for_assign ")" . block

    "{"  shift, and go to state 45

    block  go to state 196


State 196

   35 statement: KwFor "(" for_assign ";" expr ";" for_assign ")" block .

    $default  reduce using rule 35 (statement)
