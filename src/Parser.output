Terminals unused in grammar

   KwExtends
   KwNew
   KwNull
   KwRot
   "end of input"
   Error


Grammar

    0 $accept: program $end

    1 program: KwClass Id "{" program_body "}"
    2        | KwClass Id "{" "}"

    3 program_body: program_body field_decl
    4             | program_body method_decl
    5             | field_decl
    6             | method_decl

    7 field_decl: type mult-field ";"
    8           | type Id "=" constant ";"

    9 mult-field: mult-field "," id
   10           | id
   11           | mult-field "," Id "[" intConstant "]"
   12           | Id "[" intConstant "]"

   13 method_decl: type Id "(" params ")" block
   14            | KwVoid Id "(" params ")" block

   15 params: params_p
   16       | %empty

   17 params_p: params_p "," parametro
   18         | parametro

   19 parametro: type Id

   20 type: KwInt
   21     | KwBool

   22 block: "{" block_p "}"
   23      | "{" "}"

   24 block_p: block_p var-decl
   25        | var-decl
   26        | block_p statement
   27        | statement

   28 var-decl: type var-decl_p ";"

   29 var-decl_p: var-decl_p "," id
   30           | id

   31 id: Id

   32 statement: assign ";"
   33          | method-call_stmt ";"
   34          | KwIf "(" expr ")" block else_opt
   35          | KwWhile "(" expr ")" block
   36          | KwBreak ";"
   37          | KwFor "(" for_assign ";" expr ";" for_assign ")" block
   38          | KwReturn return_expr ";"
   39          | KwContinue ";"
   40          | block

   41 assign: lvalue "=" expr

   42 else_opt: KwElse block
   43         | %empty

   44 for_assign: for_assign "," assign
   45           | assign

   46 return_expr: expr

   47 method-call_stmt: Id "(" method-call_params ")"
   48                 | KwPrint "(" argument ")"
   49                 | KwPrintln "(" argument ")"
   50                 | KwRead "(" ")"
   51                 | KwRandom "(" expr ")"

   52 method-call_expr: Id "(" method-call_params ")"
   53                 | KwPrint "(" argument ")"
   54                 | KwPrintln "(" argument ")"
   55                 | KwRead "(" ")"
   56                 | KwRandom "(" expr ")"

   57 method-call_params: method-call_params_p
   58                   | %empty

   59 method-call_params_p: method-call_params "," expr
   60                     | expr

   61 argument: StringConstant
   62         | expr

   63 lvalue: Id
   64       | Id "[" expr "]"

   65 expr: lvalue
   66     | method-call_expr
   67     | constant
   68     | bin-op
   69     | "!" expr
   70     | "-" expr
   71     | "(" expr ")"

   72 bin-op: arith-op
   73       | rel-op
   74       | cond-op
   75       | eq-op

   76 arith-op: expr "+" expr
   77         | expr "-" expr
   78         | expr "*" expr
   79         | expr "/" expr
   80         | expr "<<" expr
   81         | expr ">>" expr
   82         | expr "%" expr

   83 rel-op: expr "<" expr
   84       | expr ">" expr
   85       | expr "<=" expr
   86       | expr ">=" expr

   87 eq-op: expr "==" expr
   88      | expr "!=" expr

   89 cond-op: expr "&&" expr
   90        | expr "||" expr

   91 constant: intConstant
   92         | CharConstant
   93         | KwTrue
   94         | KwFalse


Terminals, with rules where they appear

$end (0) 0
error (256)
intConstant (258) 11 12 91
CharConstant (259) 92
KwBool (260) 21
KwVoid (261) 14
Id (262) 1 2 8 11 12 13 14 19 31 47 52 63 64
StringConstant (263) 61
KwInt (264) 20
KwBreak (265) 36
KwContinue (266) 39
KwClass (267) 1 2
KwElse (268) 42
KwExtends (269)
KwFor (270) 37
KwIf (271) 34
KwFalse (272) 94
KwTrue (273) 93
KwNew (274)
KwNull (275)
KwReturn (276) 38
KwRot (277)
KwWhile (278) 35
KwPrint (279) 48 53
KwPrintln (280) 49 54
KwRead (281) 50 55
KwRandom (282) 51 56
"{" (283) 1 2 22 23
"}" (284) 1 2 22 23
"[" (285) 11 12 64
"]" (286) 11 12 64
"," (287) 9 11 17 29 44 59
";" (288) 7 8 28 32 33 36 37 38 39
"(" (289) 13 14 34 35 37 47 48 49 50 51 52 53 54 55 56 71
")" (290) 13 14 34 35 37 47 48 49 50 51 52 53 54 55 56 71
"!" (291) 69
"+" (292) 76
"-" (293) 70 77
"/" (294) 79
"*" (295) 78
"%" (296) 82
"=" (297) 8 41
">" (298) 84
"<" (299) 83
">=" (300) 86
"<=" (301) 85
"!=" (302) 88
"&&" (303) 89
"||" (304) 90
"==" (305) 87
"<<" (306) 80
">>" (307) 81
"end of input" (308)
Error (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0
program_body (57)
    on left: 3 4 5 6, on right: 1 3 4
field_decl (58)
    on left: 7 8, on right: 3 5
mult-field (59)
    on left: 9 10 11 12, on right: 7 9 11
method_decl (60)
    on left: 13 14, on right: 4 6
params (61)
    on left: 15 16, on right: 13 14
params_p (62)
    on left: 17 18, on right: 15 17
parametro (63)
    on left: 19, on right: 17 18
type (64)
    on left: 20 21, on right: 7 8 13 19 28
block (65)
    on left: 22 23, on right: 13 14 34 35 37 40 42
block_p (66)
    on left: 24 25 26 27, on right: 22 24 26
var-decl (67)
    on left: 28, on right: 24 25
var-decl_p (68)
    on left: 29 30, on right: 28 29
id (69)
    on left: 31, on right: 9 10 29 30
statement (70)
    on left: 32 33 34 35 36 37 38 39 40, on right: 26 27
assign (71)
    on left: 41, on right: 32 44 45
else_opt (72)
    on left: 42 43, on right: 34
for_assign (73)
    on left: 44 45, on right: 37 44
return_expr (74)
    on left: 46, on right: 38
method-call_stmt (75)
    on left: 47 48 49 50 51, on right: 33
method-call_expr (76)
    on left: 52 53 54 55 56, on right: 66
method-call_params (77)
    on left: 57 58, on right: 47 52 59
method-call_params_p (78)
    on left: 59 60, on right: 57
argument (79)
    on left: 61 62, on right: 48 49 53 54
lvalue (80)
    on left: 63 64, on right: 41 65
expr (81)
    on left: 65 66 67 68 69 70 71, on right: 34 35 37 41 46 51 56 59
    60 62 64 69 70 71 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90
bin-op (82)
    on left: 72 73 74 75, on right: 68
arith-op (83)
    on left: 76 77 78 79 80 81 82, on right: 72
rel-op (84)
    on left: 83 84 85 86, on right: 73
eq-op (85)
    on left: 87 88, on right: 75
cond-op (86)
    on left: 89 90, on right: 74
constant (87)
    on left: 91 92 93 94, on right: 8 67


State 0

    0 $accept: . program $end
    1 program: . KwClass Id "{" program_body "}"
    2        | . KwClass Id "{" "}"

    KwClass  shift, and go to state 1

    program  go to state 2


State 1

    1 program: KwClass . Id "{" program_body "}"
    2        | KwClass . Id "{" "}"

    Id  shift, and go to state 3


State 2

    0 $accept: program . $end

    $end  shift, and go to state 4


State 3

    1 program: KwClass Id . "{" program_body "}"
    2        | KwClass Id . "{" "}"

    "{"  shift, and go to state 5


State 4

    0 $accept: program $end .

    $default  accept


State 5

    1 program: KwClass Id "{" . program_body "}"
    2        | KwClass Id "{" . "}"
    3 program_body: . program_body field_decl
    4             | . program_body method_decl
    5             | . field_decl
    6             | . method_decl
    7 field_decl: . type mult-field ";"
    8           | . type Id "=" constant ";"
   13 method_decl: . type Id "(" params ")" block
   14            | . KwVoid Id "(" params ")" block
   20 type: . KwInt
   21     | . KwBool

    KwBool  shift, and go to state 6
    KwVoid  shift, and go to state 7
    KwInt   shift, and go to state 8
    "}"     shift, and go to state 9

    program_body  go to state 10
    field_decl    go to state 11
    method_decl   go to state 12
    type          go to state 13


State 6

   21 type: KwBool .

    $default  reduce using rule 21 (type)


State 7

   14 method_decl: KwVoid . Id "(" params ")" block

    Id  shift, and go to state 14


State 8

   20 type: KwInt .

    $default  reduce using rule 20 (type)


State 9

    2 program: KwClass Id "{" "}" .

    $default  reduce using rule 2 (program)


State 10

    1 program: KwClass Id "{" program_body . "}"
    3 program_body: program_body . field_decl
    4             | program_body . method_decl
    7 field_decl: . type mult-field ";"
    8           | . type Id "=" constant ";"
   13 method_decl: . type Id "(" params ")" block
   14            | . KwVoid Id "(" params ")" block
   20 type: . KwInt
   21     | . KwBool

    KwBool  shift, and go to state 6
    KwVoid  shift, and go to state 7
    KwInt   shift, and go to state 8
    "}"     shift, and go to state 15

    field_decl   go to state 16
    method_decl  go to state 17
    type         go to state 13


State 11

    5 program_body: field_decl .

    $default  reduce using rule 5 (program_body)


State 12

    6 program_body: method_decl .

    $default  reduce using rule 6 (program_body)


State 13

    7 field_decl: type . mult-field ";"
    8           | type . Id "=" constant ";"
    9 mult-field: . mult-field "," id
   10           | . id
   11           | . mult-field "," Id "[" intConstant "]"
   12           | . Id "[" intConstant "]"
   13 method_decl: type . Id "(" params ")" block
   31 id: . Id

    Id  shift, and go to state 18

    mult-field  go to state 19
    id          go to state 20


State 14

   14 method_decl: KwVoid Id . "(" params ")" block

    "("  shift, and go to state 21


State 15

    1 program: KwClass Id "{" program_body "}" .

    $default  reduce using rule 1 (program)


State 16

    3 program_body: program_body field_decl .

    $default  reduce using rule 3 (program_body)


State 17

    4 program_body: program_body method_decl .

    $default  reduce using rule 4 (program_body)


State 18

    8 field_decl: type Id . "=" constant ";"
   12 mult-field: Id . "[" intConstant "]"
   13 method_decl: type Id . "(" params ")" block
   31 id: Id .  [",", ";"]

    "["  shift, and go to state 22
    "("  shift, and go to state 23
    "="  shift, and go to state 24

    $default  reduce using rule 31 (id)


State 19

    7 field_decl: type mult-field . ";"
    9 mult-field: mult-field . "," id
   11           | mult-field . "," Id "[" intConstant "]"

    ","  shift, and go to state 25
    ";"  shift, and go to state 26


State 20

   10 mult-field: id .

    $default  reduce using rule 10 (mult-field)


State 21

   14 method_decl: KwVoid Id "(" . params ")" block
   15 params: . params_p
   16       | . %empty  [")"]
   17 params_p: . params_p "," parametro
   18         | . parametro
   19 parametro: . type Id
   20 type: . KwInt
   21     | . KwBool

    KwBool  shift, and go to state 6
    KwInt   shift, and go to state 8

    $default  reduce using rule 16 (params)

    params     go to state 27
    params_p   go to state 28
    parametro  go to state 29
    type       go to state 30


State 22

   12 mult-field: Id "[" . intConstant "]"

    intConstant  shift, and go to state 31


State 23

   13 method_decl: type Id "(" . params ")" block
   15 params: . params_p
   16       | . %empty  [")"]
   17 params_p: . params_p "," parametro
   18         | . parametro
   19 parametro: . type Id
   20 type: . KwInt
   21     | . KwBool

    KwBool  shift, and go to state 6
    KwInt   shift, and go to state 8

    $default  reduce using rule 16 (params)

    params     go to state 32
    params_p   go to state 28
    parametro  go to state 29
    type       go to state 30


State 24

    8 field_decl: type Id "=" . constant ";"
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36

    constant  go to state 37


State 25

    9 mult-field: mult-field "," . id
   11           | mult-field "," . Id "[" intConstant "]"
   31 id: . Id

    Id  shift, and go to state 38

    id  go to state 39


State 26

    7 field_decl: type mult-field ";" .

    $default  reduce using rule 7 (field_decl)


State 27

   14 method_decl: KwVoid Id "(" params . ")" block

    ")"  shift, and go to state 40


State 28

   15 params: params_p .  [")"]
   17 params_p: params_p . "," parametro

    ","  shift, and go to state 41

    $default  reduce using rule 15 (params)


State 29

   18 params_p: parametro .

    $default  reduce using rule 18 (params_p)


State 30

   19 parametro: type . Id

    Id  shift, and go to state 42


State 31

   12 mult-field: Id "[" intConstant . "]"

    "]"  shift, and go to state 43


State 32

   13 method_decl: type Id "(" params . ")" block

    ")"  shift, and go to state 44


State 33

   91 constant: intConstant .

    $default  reduce using rule 91 (constant)


State 34

   92 constant: CharConstant .

    $default  reduce using rule 92 (constant)


State 35

   94 constant: KwFalse .

    $default  reduce using rule 94 (constant)


State 36

   93 constant: KwTrue .

    $default  reduce using rule 93 (constant)


State 37

    8 field_decl: type Id "=" constant . ";"

    ";"  shift, and go to state 45


State 38

   11 mult-field: mult-field "," Id . "[" intConstant "]"
   31 id: Id .  [",", ";"]

    "["  shift, and go to state 46

    $default  reduce using rule 31 (id)


State 39

    9 mult-field: mult-field "," id .

    $default  reduce using rule 9 (mult-field)


State 40

   14 method_decl: KwVoid Id "(" params ")" . block
   22 block: . "{" block_p "}"
   23      | . "{" "}"

    "{"  shift, and go to state 47

    block  go to state 48


State 41

   17 params_p: params_p "," . parametro
   19 parametro: . type Id
   20 type: . KwInt
   21     | . KwBool

    KwBool  shift, and go to state 6
    KwInt   shift, and go to state 8

    parametro  go to state 49
    type       go to state 30


State 42

   19 parametro: type Id .

    $default  reduce using rule 19 (parametro)


State 43

   12 mult-field: Id "[" intConstant "]" .

    $default  reduce using rule 12 (mult-field)


State 44

   13 method_decl: type Id "(" params ")" . block
   22 block: . "{" block_p "}"
   23      | . "{" "}"

    "{"  shift, and go to state 47

    block  go to state 50


State 45

    8 field_decl: type Id "=" constant ";" .

    $default  reduce using rule 8 (field_decl)


State 46

   11 mult-field: mult-field "," Id "[" . intConstant "]"

    intConstant  shift, and go to state 51


State 47

   20 type: . KwInt
   21     | . KwBool
   22 block: . "{" block_p "}"
   22      | "{" . block_p "}"
   23      | . "{" "}"
   23      | "{" . "}"
   24 block_p: . block_p var-decl
   25        | . var-decl
   26        | . block_p statement
   27        | . statement
   28 var-decl: . type var-decl_p ";"
   32 statement: . assign ";"
   33          | . method-call_stmt ";"
   34          | . KwIf "(" expr ")" block else_opt
   35          | . KwWhile "(" expr ")" block
   36          | . KwBreak ";"
   37          | . KwFor "(" for_assign ";" expr ";" for_assign ")" block
   38          | . KwReturn return_expr ";"
   39          | . KwContinue ";"
   40          | . block
   41 assign: . lvalue "=" expr
   47 method-call_stmt: . Id "(" method-call_params ")"
   48                 | . KwPrint "(" argument ")"
   49                 | . KwPrintln "(" argument ")"
   50                 | . KwRead "(" ")"
   51                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"

    KwBool      shift, and go to state 6
    Id          shift, and go to state 52
    KwInt       shift, and go to state 8
    KwBreak     shift, and go to state 53
    KwContinue  shift, and go to state 54
    KwFor       shift, and go to state 55
    KwIf        shift, and go to state 56
    KwReturn    shift, and go to state 57
    KwWhile     shift, and go to state 58
    KwPrint     shift, and go to state 59
    KwPrintln   shift, and go to state 60
    KwRead      shift, and go to state 61
    KwRandom    shift, and go to state 62
    "{"         shift, and go to state 47
    "}"         shift, and go to state 63

    type              go to state 64
    block             go to state 65
    block_p           go to state 66
    var-decl          go to state 67
    statement         go to state 68
    assign            go to state 69
    method-call_stmt  go to state 70
    lvalue            go to state 71


State 48

   14 method_decl: KwVoid Id "(" params ")" block .

    $default  reduce using rule 14 (method_decl)


State 49

   17 params_p: params_p "," parametro .

    $default  reduce using rule 17 (params_p)


State 50

   13 method_decl: type Id "(" params ")" block .

    $default  reduce using rule 13 (method_decl)


State 51

   11 mult-field: mult-field "," Id "[" intConstant . "]"

    "]"  shift, and go to state 72


State 52

   47 method-call_stmt: Id . "(" method-call_params ")"
   63 lvalue: Id .  ["="]
   64       | Id . "[" expr "]"

    "["  shift, and go to state 73
    "("  shift, and go to state 74

    $default  reduce using rule 63 (lvalue)


State 53

   36 statement: KwBreak . ";"

    ";"  shift, and go to state 75


State 54

   39 statement: KwContinue . ";"

    ";"  shift, and go to state 76


State 55

   37 statement: KwFor . "(" for_assign ";" expr ";" for_assign ")" block

    "("  shift, and go to state 77


State 56

   34 statement: KwIf . "(" expr ")" block else_opt

    "("  shift, and go to state 78


State 57

   38 statement: KwReturn . return_expr ";"
   46 return_expr: . expr
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    return_expr       go to state 87
    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 90
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 58

   35 statement: KwWhile . "(" expr ")" block

    "("  shift, and go to state 97


State 59

   48 method-call_stmt: KwPrint . "(" argument ")"

    "("  shift, and go to state 98


State 60

   49 method-call_stmt: KwPrintln . "(" argument ")"

    "("  shift, and go to state 99


State 61

   50 method-call_stmt: KwRead . "(" ")"

    "("  shift, and go to state 100


State 62

   51 method-call_stmt: KwRandom . "(" expr ")"

    "("  shift, and go to state 101


State 63

   23 block: "{" "}" .

    $default  reduce using rule 23 (block)


State 64

   28 var-decl: type . var-decl_p ";"
   29 var-decl_p: . var-decl_p "," id
   30           | . id
   31 id: . Id

    Id  shift, and go to state 102

    var-decl_p  go to state 103
    id          go to state 104


State 65

   40 statement: block .

    $default  reduce using rule 40 (statement)


State 66

   20 type: . KwInt
   21     | . KwBool
   22 block: . "{" block_p "}"
   22      | "{" block_p . "}"
   23      | . "{" "}"
   24 block_p: block_p . var-decl
   26        | block_p . statement
   28 var-decl: . type var-decl_p ";"
   32 statement: . assign ";"
   33          | . method-call_stmt ";"
   34          | . KwIf "(" expr ")" block else_opt
   35          | . KwWhile "(" expr ")" block
   36          | . KwBreak ";"
   37          | . KwFor "(" for_assign ";" expr ";" for_assign ")" block
   38          | . KwReturn return_expr ";"
   39          | . KwContinue ";"
   40          | . block
   41 assign: . lvalue "=" expr
   47 method-call_stmt: . Id "(" method-call_params ")"
   48                 | . KwPrint "(" argument ")"
   49                 | . KwPrintln "(" argument ")"
   50                 | . KwRead "(" ")"
   51                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"

    KwBool      shift, and go to state 6
    Id          shift, and go to state 52
    KwInt       shift, and go to state 8
    KwBreak     shift, and go to state 53
    KwContinue  shift, and go to state 54
    KwFor       shift, and go to state 55
    KwIf        shift, and go to state 56
    KwReturn    shift, and go to state 57
    KwWhile     shift, and go to state 58
    KwPrint     shift, and go to state 59
    KwPrintln   shift, and go to state 60
    KwRead      shift, and go to state 61
    KwRandom    shift, and go to state 62
    "{"         shift, and go to state 47
    "}"         shift, and go to state 105

    type              go to state 64
    block             go to state 65
    var-decl          go to state 106
    statement         go to state 107
    assign            go to state 69
    method-call_stmt  go to state 70
    lvalue            go to state 71


State 67

   25 block_p: var-decl .

    $default  reduce using rule 25 (block_p)


State 68

   27 block_p: statement .

    $default  reduce using rule 27 (block_p)


State 69

   32 statement: assign . ";"

    ";"  shift, and go to state 108


State 70

   33 statement: method-call_stmt . ";"

    ";"  shift, and go to state 109


State 71

   41 assign: lvalue . "=" expr

    "="  shift, and go to state 110


State 72

   11 mult-field: mult-field "," Id "[" intConstant "]" .

    $default  reduce using rule 11 (mult-field)


State 73

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   64       | Id "[" . expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 111
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 74

   47 method-call_stmt: Id "(" . method-call_params ")"
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   57 method-call_params: . method-call_params_p
   58                   | . %empty  [",", ")"]
   59 method-call_params_p: . method-call_params "," expr
   60                     | . expr
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    $default  reduce using rule 58 (method-call_params)

    method-call_expr      go to state 88
    method-call_params    go to state 112
    method-call_params_p  go to state 113
    lvalue                go to state 89
    expr                  go to state 114
    bin-op                go to state 91
    arith-op              go to state 92
    rel-op                go to state 93
    eq-op                 go to state 94
    cond-op               go to state 95
    constant              go to state 96


State 75

   36 statement: KwBreak ";" .

    $default  reduce using rule 36 (statement)


State 76

   39 statement: KwContinue ";" .

    $default  reduce using rule 39 (statement)


State 77

   37 statement: KwFor "(" . for_assign ";" expr ";" for_assign ")" block
   41 assign: . lvalue "=" expr
   44 for_assign: . for_assign "," assign
   45           | . assign
   63 lvalue: . Id
   64       | . Id "[" expr "]"

    Id  shift, and go to state 115

    assign      go to state 116
    for_assign  go to state 117
    lvalue      go to state 71


State 78

   34 statement: KwIf "(" . expr ")" block else_opt
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 118
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 79

   52 method-call_expr: Id . "(" method-call_params ")"
   63 lvalue: Id .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "&&", "||", "==", "<<", ">>"]
   64       | Id . "[" expr "]"

    "["  shift, and go to state 73
    "("  shift, and go to state 119

    $default  reduce using rule 63 (lvalue)


State 80

   53 method-call_expr: KwPrint . "(" argument ")"

    "("  shift, and go to state 120


State 81

   54 method-call_expr: KwPrintln . "(" argument ")"

    "("  shift, and go to state 121


State 82

   55 method-call_expr: KwRead . "(" ")"

    "("  shift, and go to state 122


State 83

   56 method-call_expr: KwRandom . "(" expr ")"

    "("  shift, and go to state 123


State 84

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   71     | "(" . expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 124
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 85

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   69     | "!" . expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 125
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 86

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   70     | "-" . expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 126
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 87

   38 statement: KwReturn return_expr . ";"

    ";"  shift, and go to state 127


State 88

   66 expr: method-call_expr .

    $default  reduce using rule 66 (expr)


State 89

   65 expr: lvalue .

    $default  reduce using rule 65 (expr)


State 90

   46 return_expr: expr .  [";"]
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 46 (return_expr)


State 91

   68 expr: bin-op .

    $default  reduce using rule 68 (expr)


State 92

   72 bin-op: arith-op .

    $default  reduce using rule 72 (bin-op)


State 93

   73 bin-op: rel-op .

    $default  reduce using rule 73 (bin-op)


State 94

   75 bin-op: eq-op .

    $default  reduce using rule 75 (bin-op)


State 95

   74 bin-op: cond-op .

    $default  reduce using rule 74 (bin-op)


State 96

   67 expr: constant .

    $default  reduce using rule 67 (expr)


State 97

   35 statement: KwWhile "(" . expr ")" block
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 143
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 98

   48 method-call_stmt: KwPrint "(" . argument ")"
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   61 argument: . StringConstant
   62         | . expr
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant     shift, and go to state 33
    CharConstant    shift, and go to state 34
    Id              shift, and go to state 79
    StringConstant  shift, and go to state 144
    KwFalse         shift, and go to state 35
    KwTrue          shift, and go to state 36
    KwPrint         shift, and go to state 80
    KwPrintln       shift, and go to state 81
    KwRead          shift, and go to state 82
    KwRandom        shift, and go to state 83
    "("             shift, and go to state 84
    "!"             shift, and go to state 85
    "-"             shift, and go to state 86

    method-call_expr  go to state 88
    argument          go to state 145
    lvalue            go to state 89
    expr              go to state 146
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 99

   49 method-call_stmt: KwPrintln "(" . argument ")"
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   61 argument: . StringConstant
   62         | . expr
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant     shift, and go to state 33
    CharConstant    shift, and go to state 34
    Id              shift, and go to state 79
    StringConstant  shift, and go to state 144
    KwFalse         shift, and go to state 35
    KwTrue          shift, and go to state 36
    KwPrint         shift, and go to state 80
    KwPrintln       shift, and go to state 81
    KwRead          shift, and go to state 82
    KwRandom        shift, and go to state 83
    "("             shift, and go to state 84
    "!"             shift, and go to state 85
    "-"             shift, and go to state 86

    method-call_expr  go to state 88
    argument          go to state 147
    lvalue            go to state 89
    expr              go to state 146
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 100

   50 method-call_stmt: KwRead "(" . ")"

    ")"  shift, and go to state 148


State 101

   51 method-call_stmt: KwRandom "(" . expr ")"
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 149
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 102

   31 id: Id .

    $default  reduce using rule 31 (id)


State 103

   28 var-decl: type var-decl_p . ";"
   29 var-decl_p: var-decl_p . "," id

    ","  shift, and go to state 150
    ";"  shift, and go to state 151


State 104

   30 var-decl_p: id .

    $default  reduce using rule 30 (var-decl_p)


State 105

   22 block: "{" block_p "}" .

    $default  reduce using rule 22 (block)


State 106

   24 block_p: block_p var-decl .

    $default  reduce using rule 24 (block_p)


State 107

   26 block_p: block_p statement .

    $default  reduce using rule 26 (block_p)


State 108

   32 statement: assign ";" .

    $default  reduce using rule 32 (statement)


State 109

   33 statement: method-call_stmt ";" .

    $default  reduce using rule 33 (statement)


State 110

   41 assign: lvalue "=" . expr
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 152
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 111

   64 lvalue: Id "[" expr . "]"
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "]"   shift, and go to state 153
    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142


State 112

   47 method-call_stmt: Id "(" method-call_params . ")"
   59 method-call_params_p: method-call_params . "," expr

    ","  shift, and go to state 154
    ")"  shift, and go to state 155


State 113

   57 method-call_params: method-call_params_p .

    $default  reduce using rule 57 (method-call_params)


State 114

   60 method-call_params_p: expr .  [",", ")"]
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 60 (method-call_params_p)


State 115

   63 lvalue: Id .  ["="]
   64       | Id . "[" expr "]"

    "["  shift, and go to state 73

    $default  reduce using rule 63 (lvalue)


State 116

   45 for_assign: assign .

    $default  reduce using rule 45 (for_assign)


State 117

   37 statement: KwFor "(" for_assign . ";" expr ";" for_assign ")" block
   44 for_assign: for_assign . "," assign

    ","  shift, and go to state 156
    ";"  shift, and go to state 157


State 118

   34 statement: KwIf "(" expr . ")" block else_opt
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ")"   shift, and go to state 158
    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142


State 119

   52 method-call_expr: . Id "(" method-call_params ")"
   52                 | Id "(" . method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   57 method-call_params: . method-call_params_p
   58                   | . %empty  [",", ")"]
   59 method-call_params_p: . method-call_params "," expr
   60                     | . expr
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    $default  reduce using rule 58 (method-call_params)

    method-call_expr      go to state 88
    method-call_params    go to state 159
    method-call_params_p  go to state 113
    lvalue                go to state 89
    expr                  go to state 114
    bin-op                go to state 91
    arith-op              go to state 92
    rel-op                go to state 93
    eq-op                 go to state 94
    cond-op               go to state 95
    constant              go to state 96


State 120

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   53                 | KwPrint "(" . argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   61 argument: . StringConstant
   62         | . expr
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant     shift, and go to state 33
    CharConstant    shift, and go to state 34
    Id              shift, and go to state 79
    StringConstant  shift, and go to state 144
    KwFalse         shift, and go to state 35
    KwTrue          shift, and go to state 36
    KwPrint         shift, and go to state 80
    KwPrintln       shift, and go to state 81
    KwRead          shift, and go to state 82
    KwRandom        shift, and go to state 83
    "("             shift, and go to state 84
    "!"             shift, and go to state 85
    "-"             shift, and go to state 86

    method-call_expr  go to state 88
    argument          go to state 160
    lvalue            go to state 89
    expr              go to state 146
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 121

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   54                 | KwPrintln "(" . argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   61 argument: . StringConstant
   62         | . expr
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant     shift, and go to state 33
    CharConstant    shift, and go to state 34
    Id              shift, and go to state 79
    StringConstant  shift, and go to state 144
    KwFalse         shift, and go to state 35
    KwTrue          shift, and go to state 36
    KwPrint         shift, and go to state 80
    KwPrintln       shift, and go to state 81
    KwRead          shift, and go to state 82
    KwRandom        shift, and go to state 83
    "("             shift, and go to state 84
    "!"             shift, and go to state 85
    "-"             shift, and go to state 86

    method-call_expr  go to state 88
    argument          go to state 161
    lvalue            go to state 89
    expr              go to state 146
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 122

   55 method-call_expr: KwRead "(" . ")"

    ")"  shift, and go to state 162


State 123

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   56                 | KwRandom "(" . expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 163
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 124

   71 expr: "(" expr . ")"
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ")"   shift, and go to state 164
    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142


State 125

   69 expr: "!" expr .  ["]", ",", ";", ")"]
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 69 (expr)

    Conflict between rule 69 and token "+" resolved as shift ("!" < "+").
    Conflict between rule 69 and token "-" resolved as shift ("!" < "-").
    Conflict between rule 69 and token "/" resolved as shift ("!" < "/").
    Conflict between rule 69 and token "*" resolved as shift ("!" < "*").
    Conflict between rule 69 and token "%" resolved as shift ("!" < "%").
    Conflict between rule 69 and token ">" resolved as shift ("!" < ">").
    Conflict between rule 69 and token "<" resolved as shift ("!" < "<").
    Conflict between rule 69 and token ">=" resolved as shift ("!" < ">=").
    Conflict between rule 69 and token "<=" resolved as shift ("!" < "<=").
    Conflict between rule 69 and token "!=" resolved as shift ("!" < "!=").
    Conflict between rule 69 and token "&&" resolved as shift ("!" < "&&").
    Conflict between rule 69 and token "||" resolved as shift ("!" < "||").
    Conflict between rule 69 and token "==" resolved as shift ("!" < "==").
    Conflict between rule 69 and token "<<" resolved as shift ("!" < "<<").
    Conflict between rule 69 and token ">>" resolved as shift ("!" < ">>").


State 126

   70 expr: "-" expr .  ["]", ",", ";", ")", "+", "-", "/", "*"]
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 70 (expr)

    Conflict between rule 70 and token "+" resolved as reduce (%left "+").
    Conflict between rule 70 and token "-" resolved as reduce (%left "-").
    Conflict between rule 70 and token "/" resolved as reduce ("/" < "-").
    Conflict between rule 70 and token "*" resolved as reduce ("*" < "-").
    Conflict between rule 70 and token "%" resolved as shift ("-" < "%").
    Conflict between rule 70 and token ">" resolved as shift ("-" < ">").
    Conflict between rule 70 and token "<" resolved as shift ("-" < "<").
    Conflict between rule 70 and token ">=" resolved as shift ("-" < ">=").
    Conflict between rule 70 and token "<=" resolved as shift ("-" < "<=").
    Conflict between rule 70 and token "!=" resolved as shift ("-" < "!=").
    Conflict between rule 70 and token "&&" resolved as shift ("-" < "&&").
    Conflict between rule 70 and token "||" resolved as shift ("-" < "||").
    Conflict between rule 70 and token "==" resolved as shift ("-" < "==").
    Conflict between rule 70 and token "<<" resolved as shift ("-" < "<<").
    Conflict between rule 70 and token ">>" resolved as shift ("-" < ">>").


State 127

   38 statement: KwReturn return_expr ";" .

    $default  reduce using rule 38 (statement)


State 128

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   76         | expr "+" . expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 165
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 129

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   77         | expr "-" . expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 166
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 130

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   79         | expr "/" . expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 167
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 131

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   78         | expr "*" . expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 168
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 132

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   82         | expr "%" . expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 169
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 133

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   84       | expr ">" . expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 170
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 134

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   83       | expr "<" . expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 171
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 135

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   86       | expr ">=" . expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 172
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 136

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   85       | expr "<=" . expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 173
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 137

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   88      | expr "!=" . expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 174
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 138

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   89        | expr "&&" . expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 175
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 139

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   90        | expr "||" . expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 176
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 140

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   87      | expr "==" . expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 177
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 141

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   80         | expr "<<" . expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 178
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 142

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   81         | expr ">>" . expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 179
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 143

   35 statement: KwWhile "(" expr . ")" block
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ")"   shift, and go to state 180
    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142


State 144

   61 argument: StringConstant .

    $default  reduce using rule 61 (argument)


State 145

   48 method-call_stmt: KwPrint "(" argument . ")"

    ")"  shift, and go to state 181


State 146

   62 argument: expr .  [")"]
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 62 (argument)


State 147

   49 method-call_stmt: KwPrintln "(" argument . ")"

    ")"  shift, and go to state 182


State 148

   50 method-call_stmt: KwRead "(" ")" .

    $default  reduce using rule 50 (method-call_stmt)


State 149

   51 method-call_stmt: KwRandom "(" expr . ")"
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ")"   shift, and go to state 183
    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142


State 150

   29 var-decl_p: var-decl_p "," . id
   31 id: . Id

    Id  shift, and go to state 102

    id  go to state 184


State 151

   28 var-decl: type var-decl_p ";" .

    $default  reduce using rule 28 (var-decl)


State 152

   41 assign: lvalue "=" expr .  [",", ";", ")"]
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 41 (assign)


State 153

   64 lvalue: Id "[" expr "]" .

    $default  reduce using rule 64 (lvalue)


State 154

   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   59 method-call_params_p: method-call_params "," . expr
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 185
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 155

   47 method-call_stmt: Id "(" method-call_params ")" .

    $default  reduce using rule 47 (method-call_stmt)


State 156

   41 assign: . lvalue "=" expr
   44 for_assign: for_assign "," . assign
   63 lvalue: . Id
   64       | . Id "[" expr "]"

    Id  shift, and go to state 115

    assign  go to state 186
    lvalue  go to state 71


State 157

   37 statement: KwFor "(" for_assign ";" . expr ";" for_assign ")" block
   52 method-call_expr: . Id "(" method-call_params ")"
   53                 | . KwPrint "(" argument ")"
   54                 | . KwPrintln "(" argument ")"
   55                 | . KwRead "(" ")"
   56                 | . KwRandom "(" expr ")"
   63 lvalue: . Id
   64       | . Id "[" expr "]"
   65 expr: . lvalue
   66     | . method-call_expr
   67     | . constant
   68     | . bin-op
   69     | . "!" expr
   70     | . "-" expr
   71     | . "(" expr ")"
   72 bin-op: . arith-op
   73       | . rel-op
   74       | . cond-op
   75       | . eq-op
   76 arith-op: . expr "+" expr
   77         | . expr "-" expr
   78         | . expr "*" expr
   79         | . expr "/" expr
   80         | . expr "<<" expr
   81         | . expr ">>" expr
   82         | . expr "%" expr
   83 rel-op: . expr "<" expr
   84       | . expr ">" expr
   85       | . expr "<=" expr
   86       | . expr ">=" expr
   87 eq-op: . expr "==" expr
   88      | . expr "!=" expr
   89 cond-op: . expr "&&" expr
   90        | . expr "||" expr
   91 constant: . intConstant
   92         | . CharConstant
   93         | . KwTrue
   94         | . KwFalse

    intConstant   shift, and go to state 33
    CharConstant  shift, and go to state 34
    Id            shift, and go to state 79
    KwFalse       shift, and go to state 35
    KwTrue        shift, and go to state 36
    KwPrint       shift, and go to state 80
    KwPrintln     shift, and go to state 81
    KwRead        shift, and go to state 82
    KwRandom      shift, and go to state 83
    "("           shift, and go to state 84
    "!"           shift, and go to state 85
    "-"           shift, and go to state 86

    method-call_expr  go to state 88
    lvalue            go to state 89
    expr              go to state 187
    bin-op            go to state 91
    arith-op          go to state 92
    rel-op            go to state 93
    eq-op             go to state 94
    cond-op           go to state 95
    constant          go to state 96


State 158

   22 block: . "{" block_p "}"
   23      | . "{" "}"
   34 statement: KwIf "(" expr ")" . block else_opt

    "{"  shift, and go to state 47

    block  go to state 188


State 159

   52 method-call_expr: Id "(" method-call_params . ")"
   59 method-call_params_p: method-call_params . "," expr

    ","  shift, and go to state 154
    ")"  shift, and go to state 189


State 160

   53 method-call_expr: KwPrint "(" argument . ")"

    ")"  shift, and go to state 190


State 161

   54 method-call_expr: KwPrintln "(" argument . ")"

    ")"  shift, and go to state 191


State 162

   55 method-call_expr: KwRead "(" ")" .

    $default  reduce using rule 55 (method-call_expr)


State 163

   56 method-call_expr: KwRandom "(" expr . ")"
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ")"   shift, and go to state 192
    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142


State 164

   71 expr: "(" expr ")" .

    $default  reduce using rule 71 (expr)


State 165

   76 arith-op: expr . "+" expr
   76         | expr "+" expr .  ["]", ",", ";", ")", "+", "-", "/", "*"]
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 76 (arith-op)

    Conflict between rule 76 and token "+" resolved as reduce (%left "+").
    Conflict between rule 76 and token "-" resolved as reduce (%left "-").
    Conflict between rule 76 and token "/" resolved as reduce ("/" < "+").
    Conflict between rule 76 and token "*" resolved as reduce ("*" < "+").
    Conflict between rule 76 and token "%" resolved as shift ("+" < "%").
    Conflict between rule 76 and token ">" resolved as shift ("+" < ">").
    Conflict between rule 76 and token "<" resolved as shift ("+" < "<").
    Conflict between rule 76 and token ">=" resolved as shift ("+" < ">=").
    Conflict between rule 76 and token "<=" resolved as shift ("+" < "<=").
    Conflict between rule 76 and token "!=" resolved as shift ("+" < "!=").
    Conflict between rule 76 and token "&&" resolved as shift ("+" < "&&").
    Conflict between rule 76 and token "||" resolved as shift ("+" < "||").
    Conflict between rule 76 and token "==" resolved as shift ("+" < "==").
    Conflict between rule 76 and token "<<" resolved as shift ("+" < "<<").
    Conflict between rule 76 and token ">>" resolved as shift ("+" < ">>").


State 166

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   77         | expr "-" expr .  ["]", ",", ";", ")", "+", "-", "/", "*"]
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 77 (arith-op)

    Conflict between rule 77 and token "+" resolved as reduce (%left "+").
    Conflict between rule 77 and token "-" resolved as reduce (%left "-").
    Conflict between rule 77 and token "/" resolved as reduce ("/" < "-").
    Conflict between rule 77 and token "*" resolved as reduce ("*" < "-").
    Conflict between rule 77 and token "%" resolved as shift ("-" < "%").
    Conflict between rule 77 and token ">" resolved as shift ("-" < ">").
    Conflict between rule 77 and token "<" resolved as shift ("-" < "<").
    Conflict between rule 77 and token ">=" resolved as shift ("-" < ">=").
    Conflict between rule 77 and token "<=" resolved as shift ("-" < "<=").
    Conflict between rule 77 and token "!=" resolved as shift ("-" < "!=").
    Conflict between rule 77 and token "&&" resolved as shift ("-" < "&&").
    Conflict between rule 77 and token "||" resolved as shift ("-" < "||").
    Conflict between rule 77 and token "==" resolved as shift ("-" < "==").
    Conflict between rule 77 and token "<<" resolved as shift ("-" < "<<").
    Conflict between rule 77 and token ">>" resolved as shift ("-" < ">>").


State 167

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   79         | expr "/" expr .  ["]", ",", ";", ")", "/", "*"]
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 79 (arith-op)

    Conflict between rule 79 and token "+" resolved as shift ("/" < "+").
    Conflict between rule 79 and token "-" resolved as shift ("/" < "-").
    Conflict between rule 79 and token "/" resolved as reduce (%left "/").
    Conflict between rule 79 and token "*" resolved as reduce (%left "*").
    Conflict between rule 79 and token "%" resolved as shift ("/" < "%").
    Conflict between rule 79 and token ">" resolved as shift ("/" < ">").
    Conflict between rule 79 and token "<" resolved as shift ("/" < "<").
    Conflict between rule 79 and token ">=" resolved as shift ("/" < ">=").
    Conflict between rule 79 and token "<=" resolved as shift ("/" < "<=").
    Conflict between rule 79 and token "!=" resolved as shift ("/" < "!=").
    Conflict between rule 79 and token "&&" resolved as shift ("/" < "&&").
    Conflict between rule 79 and token "||" resolved as shift ("/" < "||").
    Conflict between rule 79 and token "==" resolved as shift ("/" < "==").
    Conflict between rule 79 and token "<<" resolved as shift ("/" < "<<").
    Conflict between rule 79 and token ">>" resolved as shift ("/" < ">>").


State 168

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   78         | expr "*" expr .  ["]", ",", ";", ")", "/", "*"]
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 78 (arith-op)

    Conflict between rule 78 and token "+" resolved as shift ("*" < "+").
    Conflict between rule 78 and token "-" resolved as shift ("*" < "-").
    Conflict between rule 78 and token "/" resolved as reduce (%left "/").
    Conflict between rule 78 and token "*" resolved as reduce (%left "*").
    Conflict between rule 78 and token "%" resolved as shift ("*" < "%").
    Conflict between rule 78 and token ">" resolved as shift ("*" < ">").
    Conflict between rule 78 and token "<" resolved as shift ("*" < "<").
    Conflict between rule 78 and token ">=" resolved as shift ("*" < ">=").
    Conflict between rule 78 and token "<=" resolved as shift ("*" < "<=").
    Conflict between rule 78 and token "!=" resolved as shift ("*" < "!=").
    Conflict between rule 78 and token "&&" resolved as shift ("*" < "&&").
    Conflict between rule 78 and token "||" resolved as shift ("*" < "||").
    Conflict between rule 78 and token "==" resolved as shift ("*" < "==").
    Conflict between rule 78 and token "<<" resolved as shift ("*" < "<<").
    Conflict between rule 78 and token ">>" resolved as shift ("*" < ">>").


State 169

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   82         | expr "%" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%"]
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 82 (arith-op)

    Conflict between rule 82 and token "+" resolved as reduce ("+" < "%").
    Conflict between rule 82 and token "-" resolved as reduce ("-" < "%").
    Conflict between rule 82 and token "/" resolved as reduce ("/" < "%").
    Conflict between rule 82 and token "*" resolved as reduce ("*" < "%").
    Conflict between rule 82 and token "%" resolved as reduce (%left "%").
    Conflict between rule 82 and token ">" resolved as shift ("%" < ">").
    Conflict between rule 82 and token "<" resolved as shift ("%" < "<").
    Conflict between rule 82 and token ">=" resolved as shift ("%" < ">=").
    Conflict between rule 82 and token "<=" resolved as shift ("%" < "<=").
    Conflict between rule 82 and token "!=" resolved as shift ("%" < "!=").
    Conflict between rule 82 and token "&&" resolved as shift ("%" < "&&").
    Conflict between rule 82 and token "||" resolved as shift ("%" < "||").
    Conflict between rule 82 and token "==" resolved as shift ("%" < "==").
    Conflict between rule 82 and token "<<" resolved as shift ("%" < "<<").
    Conflict between rule 82 and token ">>" resolved as shift ("%" < ">>").


State 170

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   84       | expr ">" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "<<", ">>"]
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140

    $default  reduce using rule 84 (rel-op)

    Conflict between rule 84 and token "+" resolved as reduce ("+" < ">").
    Conflict between rule 84 and token "-" resolved as reduce ("-" < ">").
    Conflict between rule 84 and token "/" resolved as reduce ("/" < ">").
    Conflict between rule 84 and token "*" resolved as reduce ("*" < ">").
    Conflict between rule 84 and token "%" resolved as reduce ("%" < ">").
    Conflict between rule 84 and token ">" resolved as reduce (%left ">").
    Conflict between rule 84 and token "<" resolved as reduce (%left "<").
    Conflict between rule 84 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 84 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 84 and token "!=" resolved as shift (">" < "!=").
    Conflict between rule 84 and token "&&" resolved as shift (">" < "&&").
    Conflict between rule 84 and token "||" resolved as shift (">" < "||").
    Conflict between rule 84 and token "==" resolved as shift (">" < "==").
    Conflict between rule 84 and token "<<" resolved as reduce ("<<" < ">").
    Conflict between rule 84 and token ">>" resolved as reduce (">>" < ">").


State 171

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   83       | expr "<" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "<<", ">>"]
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140

    $default  reduce using rule 83 (rel-op)

    Conflict between rule 83 and token "+" resolved as reduce ("+" < "<").
    Conflict between rule 83 and token "-" resolved as reduce ("-" < "<").
    Conflict between rule 83 and token "/" resolved as reduce ("/" < "<").
    Conflict between rule 83 and token "*" resolved as reduce ("*" < "<").
    Conflict between rule 83 and token "%" resolved as reduce ("%" < "<").
    Conflict between rule 83 and token ">" resolved as reduce (%left ">").
    Conflict between rule 83 and token "<" resolved as reduce (%left "<").
    Conflict between rule 83 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 83 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 83 and token "!=" resolved as shift ("<" < "!=").
    Conflict between rule 83 and token "&&" resolved as shift ("<" < "&&").
    Conflict between rule 83 and token "||" resolved as shift ("<" < "||").
    Conflict between rule 83 and token "==" resolved as shift ("<" < "==").
    Conflict between rule 83 and token "<<" resolved as reduce ("<<" < "<").
    Conflict between rule 83 and token ">>" resolved as reduce (">>" < "<").


State 172

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   86       | expr ">=" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "<<", ">>"]
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140

    $default  reduce using rule 86 (rel-op)

    Conflict between rule 86 and token "+" resolved as reduce ("+" < ">=").
    Conflict between rule 86 and token "-" resolved as reduce ("-" < ">=").
    Conflict between rule 86 and token "/" resolved as reduce ("/" < ">=").
    Conflict between rule 86 and token "*" resolved as reduce ("*" < ">=").
    Conflict between rule 86 and token "%" resolved as reduce ("%" < ">=").
    Conflict between rule 86 and token ">" resolved as reduce (%left ">").
    Conflict between rule 86 and token "<" resolved as reduce (%left "<").
    Conflict between rule 86 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 86 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 86 and token "!=" resolved as shift (">=" < "!=").
    Conflict between rule 86 and token "&&" resolved as shift (">=" < "&&").
    Conflict between rule 86 and token "||" resolved as shift (">=" < "||").
    Conflict between rule 86 and token "==" resolved as shift (">=" < "==").
    Conflict between rule 86 and token "<<" resolved as reduce ("<<" < ">=").
    Conflict between rule 86 and token ">>" resolved as reduce (">>" < ">=").


State 173

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   85       | expr "<=" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "<<", ">>"]
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140

    $default  reduce using rule 85 (rel-op)

    Conflict between rule 85 and token "+" resolved as reduce ("+" < "<=").
    Conflict between rule 85 and token "-" resolved as reduce ("-" < "<=").
    Conflict between rule 85 and token "/" resolved as reduce ("/" < "<=").
    Conflict between rule 85 and token "*" resolved as reduce ("*" < "<=").
    Conflict between rule 85 and token "%" resolved as reduce ("%" < "<=").
    Conflict between rule 85 and token ">" resolved as reduce (%left ">").
    Conflict between rule 85 and token "<" resolved as reduce (%left "<").
    Conflict between rule 85 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 85 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 85 and token "!=" resolved as shift ("<=" < "!=").
    Conflict between rule 85 and token "&&" resolved as shift ("<=" < "&&").
    Conflict between rule 85 and token "||" resolved as shift ("<=" < "||").
    Conflict between rule 85 and token "==" resolved as shift ("<=" < "==").
    Conflict between rule 85 and token "<<" resolved as reduce ("<<" < "<=").
    Conflict between rule 85 and token ">>" resolved as reduce (">>" < "<=").


State 174

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   88      | expr "!=" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "==", "<<", ">>"]
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139

    $default  reduce using rule 88 (eq-op)

    Conflict between rule 88 and token "+" resolved as reduce ("+" < "!=").
    Conflict between rule 88 and token "-" resolved as reduce ("-" < "!=").
    Conflict between rule 88 and token "/" resolved as reduce ("/" < "!=").
    Conflict between rule 88 and token "*" resolved as reduce ("*" < "!=").
    Conflict between rule 88 and token "%" resolved as reduce ("%" < "!=").
    Conflict between rule 88 and token ">" resolved as reduce (">" < "!=").
    Conflict between rule 88 and token "<" resolved as reduce ("<" < "!=").
    Conflict between rule 88 and token ">=" resolved as reduce (">=" < "!=").
    Conflict between rule 88 and token "<=" resolved as reduce ("<=" < "!=").
    Conflict between rule 88 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 88 and token "&&" resolved as shift ("!=" < "&&").
    Conflict between rule 88 and token "||" resolved as shift ("!=" < "||").
    Conflict between rule 88 and token "==" resolved as reduce (%left "==").
    Conflict between rule 88 and token "<<" resolved as reduce ("<<" < "!=").
    Conflict between rule 88 and token ">>" resolved as reduce (">>" < "!=").


State 175

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   89        | expr "&&" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "&&", "==", "<<", ">>"]
   90        | expr . "||" expr

    "||"  shift, and go to state 139

    $default  reduce using rule 89 (cond-op)

    Conflict between rule 89 and token "+" resolved as reduce ("+" < "&&").
    Conflict between rule 89 and token "-" resolved as reduce ("-" < "&&").
    Conflict between rule 89 and token "/" resolved as reduce ("/" < "&&").
    Conflict between rule 89 and token "*" resolved as reduce ("*" < "&&").
    Conflict between rule 89 and token "%" resolved as reduce ("%" < "&&").
    Conflict between rule 89 and token ">" resolved as reduce (">" < "&&").
    Conflict between rule 89 and token "<" resolved as reduce ("<" < "&&").
    Conflict between rule 89 and token ">=" resolved as reduce (">=" < "&&").
    Conflict between rule 89 and token "<=" resolved as reduce ("<=" < "&&").
    Conflict between rule 89 and token "!=" resolved as reduce ("!=" < "&&").
    Conflict between rule 89 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 89 and token "||" resolved as shift ("&&" < "||").
    Conflict between rule 89 and token "==" resolved as reduce ("==" < "&&").
    Conflict between rule 89 and token "<<" resolved as reduce ("<<" < "&&").
    Conflict between rule 89 and token ">>" resolved as reduce (">>" < "&&").


State 176

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr
   90        | expr "||" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "&&", "||", "==", "<<", ">>"]

    $default  reduce using rule 90 (cond-op)

    Conflict between rule 90 and token "+" resolved as reduce ("+" < "||").
    Conflict between rule 90 and token "-" resolved as reduce ("-" < "||").
    Conflict between rule 90 and token "/" resolved as reduce ("/" < "||").
    Conflict between rule 90 and token "*" resolved as reduce ("*" < "||").
    Conflict between rule 90 and token "%" resolved as reduce ("%" < "||").
    Conflict between rule 90 and token ">" resolved as reduce (">" < "||").
    Conflict between rule 90 and token "<" resolved as reduce ("<" < "||").
    Conflict between rule 90 and token ">=" resolved as reduce (">=" < "||").
    Conflict between rule 90 and token "<=" resolved as reduce ("<=" < "||").
    Conflict between rule 90 and token "!=" resolved as reduce ("!=" < "||").
    Conflict between rule 90 and token "&&" resolved as reduce ("&&" < "||").
    Conflict between rule 90 and token "||" resolved as reduce (%left "||").
    Conflict between rule 90 and token "==" resolved as reduce ("==" < "||").
    Conflict between rule 90 and token "<<" resolved as reduce ("<<" < "||").
    Conflict between rule 90 and token ">>" resolved as reduce (">>" < "||").


State 177

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   87      | expr "==" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", ">", "<", ">=", "<=", "!=", "==", "<<", ">>"]
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139

    $default  reduce using rule 87 (eq-op)

    Conflict between rule 87 and token "+" resolved as reduce ("+" < "==").
    Conflict between rule 87 and token "-" resolved as reduce ("-" < "==").
    Conflict between rule 87 and token "/" resolved as reduce ("/" < "==").
    Conflict between rule 87 and token "*" resolved as reduce ("*" < "==").
    Conflict between rule 87 and token "%" resolved as reduce ("%" < "==").
    Conflict between rule 87 and token ">" resolved as reduce (">" < "==").
    Conflict between rule 87 and token "<" resolved as reduce ("<" < "==").
    Conflict between rule 87 and token ">=" resolved as reduce (">=" < "==").
    Conflict between rule 87 and token "<=" resolved as reduce ("<=" < "==").
    Conflict between rule 87 and token "!=" resolved as reduce (%left "!=").
    Conflict between rule 87 and token "&&" resolved as shift ("==" < "&&").
    Conflict between rule 87 and token "||" resolved as shift ("==" < "||").
    Conflict between rule 87 and token "==" resolved as reduce (%left "==").
    Conflict between rule 87 and token "<<" resolved as reduce ("<<" < "==").
    Conflict between rule 87 and token ">>" resolved as reduce (">>" < "==").


State 178

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   80         | expr "<<" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", "<<", ">>"]
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140

    $default  reduce using rule 80 (arith-op)

    Conflict between rule 80 and token "+" resolved as reduce ("+" < "<<").
    Conflict between rule 80 and token "-" resolved as reduce ("-" < "<<").
    Conflict between rule 80 and token "/" resolved as reduce ("/" < "<<").
    Conflict between rule 80 and token "*" resolved as reduce ("*" < "<<").
    Conflict between rule 80 and token "%" resolved as reduce ("%" < "<<").
    Conflict between rule 80 and token ">" resolved as shift ("<<" < ">").
    Conflict between rule 80 and token "<" resolved as shift ("<<" < "<").
    Conflict between rule 80 and token ">=" resolved as shift ("<<" < ">=").
    Conflict between rule 80 and token "<=" resolved as shift ("<<" < "<=").
    Conflict between rule 80 and token "!=" resolved as shift ("<<" < "!=").
    Conflict between rule 80 and token "&&" resolved as shift ("<<" < "&&").
    Conflict between rule 80 and token "||" resolved as shift ("<<" < "||").
    Conflict between rule 80 and token "==" resolved as shift ("<<" < "==").
    Conflict between rule 80 and token "<<" resolved as reduce (%left "<<").
    Conflict between rule 80 and token ">>" resolved as reduce (%left ">>").


State 179

   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   81         | expr ">>" expr .  ["]", ",", ";", ")", "+", "-", "/", "*", "%", "<<", ">>"]
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140

    $default  reduce using rule 81 (arith-op)

    Conflict between rule 81 and token "+" resolved as reduce ("+" < ">>").
    Conflict between rule 81 and token "-" resolved as reduce ("-" < ">>").
    Conflict between rule 81 and token "/" resolved as reduce ("/" < ">>").
    Conflict between rule 81 and token "*" resolved as reduce ("*" < ">>").
    Conflict between rule 81 and token "%" resolved as reduce ("%" < ">>").
    Conflict between rule 81 and token ">" resolved as shift (">>" < ">").
    Conflict between rule 81 and token "<" resolved as shift (">>" < "<").
    Conflict between rule 81 and token ">=" resolved as shift (">>" < ">=").
    Conflict between rule 81 and token "<=" resolved as shift (">>" < "<=").
    Conflict between rule 81 and token "!=" resolved as shift (">>" < "!=").
    Conflict between rule 81 and token "&&" resolved as shift (">>" < "&&").
    Conflict between rule 81 and token "||" resolved as shift (">>" < "||").
    Conflict between rule 81 and token "==" resolved as shift (">>" < "==").
    Conflict between rule 81 and token "<<" resolved as reduce (%left "<<").
    Conflict between rule 81 and token ">>" resolved as reduce (%left ">>").


State 180

   22 block: . "{" block_p "}"
   23      | . "{" "}"
   35 statement: KwWhile "(" expr ")" . block

    "{"  shift, and go to state 47

    block  go to state 193


State 181

   48 method-call_stmt: KwPrint "(" argument ")" .

    $default  reduce using rule 48 (method-call_stmt)


State 182

   49 method-call_stmt: KwPrintln "(" argument ")" .

    $default  reduce using rule 49 (method-call_stmt)


State 183

   51 method-call_stmt: KwRandom "(" expr ")" .

    $default  reduce using rule 51 (method-call_stmt)


State 184

   29 var-decl_p: var-decl_p "," id .

    $default  reduce using rule 29 (var-decl_p)


State 185

   59 method-call_params_p: method-call_params "," expr .  [",", ")"]
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142

    $default  reduce using rule 59 (method-call_params_p)


State 186

   44 for_assign: for_assign "," assign .

    $default  reduce using rule 44 (for_assign)


State 187

   37 statement: KwFor "(" for_assign ";" expr . ";" for_assign ")" block
   76 arith-op: expr . "+" expr
   77         | expr . "-" expr
   78         | expr . "*" expr
   79         | expr . "/" expr
   80         | expr . "<<" expr
   81         | expr . ">>" expr
   82         | expr . "%" expr
   83 rel-op: expr . "<" expr
   84       | expr . ">" expr
   85       | expr . "<=" expr
   86       | expr . ">=" expr
   87 eq-op: expr . "==" expr
   88      | expr . "!=" expr
   89 cond-op: expr . "&&" expr
   90        | expr . "||" expr

    ";"   shift, and go to state 194
    "+"   shift, and go to state 128
    "-"   shift, and go to state 129
    "/"   shift, and go to state 130
    "*"   shift, and go to state 131
    "%"   shift, and go to state 132
    ">"   shift, and go to state 133
    "<"   shift, and go to state 134
    ">="  shift, and go to state 135
    "<="  shift, and go to state 136
    "!="  shift, and go to state 137
    "&&"  shift, and go to state 138
    "||"  shift, and go to state 139
    "=="  shift, and go to state 140
    "<<"  shift, and go to state 141
    ">>"  shift, and go to state 142


State 188

   34 statement: KwIf "(" expr ")" block . else_opt
   42 else_opt: . KwElse block
   43         | . %empty  [KwBool, Id, KwInt, KwBreak, KwContinue, KwFor, KwIf, KwReturn, KwWhile, KwPrint, KwPrintln, KwRead, KwRandom, "{", "}"]

    KwElse  shift, and go to state 195

    $default  reduce using rule 43 (else_opt)

    else_opt  go to state 196


State 189

   52 method-call_expr: Id "(" method-call_params ")" .

    $default  reduce using rule 52 (method-call_expr)


State 190

   53 method-call_expr: KwPrint "(" argument ")" .

    $default  reduce using rule 53 (method-call_expr)


State 191

   54 method-call_expr: KwPrintln "(" argument ")" .

    $default  reduce using rule 54 (method-call_expr)


State 192

   56 method-call_expr: KwRandom "(" expr ")" .

    $default  reduce using rule 56 (method-call_expr)


State 193

   35 statement: KwWhile "(" expr ")" block .

    $default  reduce using rule 35 (statement)


State 194

   37 statement: KwFor "(" for_assign ";" expr ";" . for_assign ")" block
   41 assign: . lvalue "=" expr
   44 for_assign: . for_assign "," assign
   45           | . assign
   63 lvalue: . Id
   64       | . Id "[" expr "]"

    Id  shift, and go to state 115

    assign      go to state 116
    for_assign  go to state 197
    lvalue      go to state 71


State 195

   22 block: . "{" block_p "}"
   23      | . "{" "}"
   42 else_opt: KwElse . block

    "{"  shift, and go to state 47

    block  go to state 198


State 196

   34 statement: KwIf "(" expr ")" block else_opt .

    $default  reduce using rule 34 (statement)


State 197

   37 statement: KwFor "(" for_assign ";" expr ";" for_assign . ")" block
   44 for_assign: for_assign . "," assign

    ","  shift, and go to state 156
    ")"  shift, and go to state 199


State 198

   42 else_opt: KwElse block .

    $default  reduce using rule 42 (else_opt)


State 199

   22 block: . "{" block_p "}"
   23      | . "{" "}"
   37 statement: KwFor "(" for_assign ";" expr ";" for_assign ")" . block

    "{"  shift, and go to state 47

    block  go to state 200


State 200

   37 statement: KwFor "(" for_assign ";" expr ";" for_assign ")" block .

    $default  reduce using rule 37 (statement)
